{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$sml.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,GAA2E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACnHD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AAC9B,WAAO,CACLC,QAAS,CAAC,IAAD,CADJ,EAELC,SAAU,CACRC,QAEE,gPAHM,EAORC,SAEE,sFATM,EAURC,QACE,6CAXM,CAFL,EAeLC,QAAS,SAfJ,EAgBLC,QAAS,cAhBJ,EAiBLC,SAAU,CACR,CACEC,UAAW,SADb;AAEEC,UAAO,kBAFT,EAGEC,UAAW,CAHb,CADQ,EAMRX,IAAKY,CAAAA,OAAL,CACE,QADF,EAEE,QAFF,EAGE,CACEJ,SAAU,CAAC,MAAD,CADZ,CAHF,CANQ,EAaR,CACEC,UAAW,QADb,EAEEC,MAAO,wBAFT,CAbQ,EAkBR,CACED,UAAW,MADb,EAEEC,MAAO,eAFT,CAlBQ,EAsBR,CACED,UAAW,MADb,EAEEC,MAAO,iBAFT,EAGEC,UAAW,CAHb,CAtBQ,EA2BR,CACED,MAAO,oBADT,CA3BQ,EA8BRV,IAAKa,CAAAA,OAAL,CAAab,IAAKc,CAAAA,gBAAlB,EAAoC,CAACL,UAAW,QAAZ,EAAsBE,UAAW,CAAjC,CAApC,CA9BQ,EA+BRX,IAAKa,CAAAA,OAAL,CAAab,IAAKe,CAAAA,iBAAlB,EAAqC,CAACT,QAAS,IAAV,CAArC,CA/BQ,EAgCR,CACEG,UAAW,QADb,EAEEC,MACE,0HAHJ;AAOEC,cAAW,CAPb,CAhCQ,EAyCR,CACED,MAAO,OADT,CAzCQ,CAjBL,CAAP;AAD8B,GAAhC;AADmH,CAAnH;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/sml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$sml\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n        /* according to Definition of Standard ML 97  */\n        'abstype and andalso as case datatype do else end eqtype ' +\n        'exception fn fun functor handle if in include infix infixr ' +\n        'let local nonfix of op open orelse raise rec sharing sig ' +\n        'signature struct structure then type val with withtype where while',\n      built_in:\n        /* built-in types according to basis library */\n        'array bool char exn int list option order real ref string substring vector unit word',\n      literal:\n        'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [\n      {\n        className: 'literal',\n        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: ['self']\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with '*/\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","aliases","keywords","keyword","built_in","literal","illegal","lexemes","contains","className","begin","relevance","COMMENT","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE"]
}
