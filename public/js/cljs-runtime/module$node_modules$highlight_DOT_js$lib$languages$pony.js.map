{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$pony.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACpHD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AA4D9B,WAAO,CACLC,SA5DaC,CACbC,QACE,gTAFWD,EAObE,KACE,yBARWF,EASbG,QACE,iBAVWH,CA2DR,EAELI,SAAU,CA7BIC,CACdC,UAAW,MADGD,EAEdE,MAAO,kBAFOF,EAGdG,UAAW,CAHGH,CA6BJ,EAhDmBI,CAC7BH,UAAW,QADkBG,EAE7BF,MAAO,KAFsBE,EAEfC,IAAK,KAFUD;AAG7BD,cAAW,EAHkBC,CAgDnB,EA1CYE,CACtBL,UAAW,QADWK,EAEtBJ,MAAO,GAFeI,EAEVD,IAAK,GAFKC,EAGtBP,SAAU,CAACN,IAAKc,CAAAA,gBAAN,CAHYD,CA0CZ,EApCiBE,CAC3BP,UAAW,QADgBO,EAE3BN,MAAO,GAFoBM,EAEdH,IAAK,GAFSG,EAG3BT,SAAU,CAACN,IAAKc,CAAAA,gBAAN,CAHiBC,EAI3BL,UAAW,CAJgBK,CAoCjB,EAvBMC,CAChBP,MAAOT,IAAKiB,CAAAA,QAAZR,GAAuB,GADPO,EACaN,UAAW,CADxBM,CAuBN,EAnBME,CAChBV,UAAW,QADKU,EAEhBT,MAAO,8FAFSS,EAGhBR,UAAW,CAHKQ,CAmBN,EAORlB,IAAKmB,CAAAA,mBAPG,EAQRnB,IAAKoB,CAAAA,oBARG,CAFL,CAAP;AA5D8B,GAAhC;AADoH,CAApH;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/pony.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$pony\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'actor addressof and as be break class compile_error compile_intrinsic ' +\n      'consume continue delegate digestof do else elseif embed end error ' +\n      'for fun if ifdef in interface is isnt lambda let match new not object ' +\n      'or primitive recover repeat return struct then trait try type until ' +\n      'use var where while with xor',\n    meta:\n      'iso val tag trn box ref',\n    literal:\n      'this false true'\n  };\n\n  var TRIPLE_QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"\"\"', end: '\"\"\"',\n    relevance: 10\n  };\n\n  var QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n\n  var SINGLE_QUOTE_CHAR_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n\n  var TYPE_NAME = {\n    className: 'type',\n    begin: '\\\\b_?[A-Z][\\\\w]*',\n    relevance: 0\n  };\n\n  var PRIMED_NAME = {\n    begin: hljs.IDENT_RE + '\\'', relevance: 0\n  };\n\n  var NUMBER_MODE = {\n    className: 'number',\n    begin: '(-?)(\\\\b0[xX][a-fA-F0-9]+|\\\\b0[bB][01]+|(\\\\b\\\\d+(_\\\\d+)?(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n\n  /**\n   * The `FUNCTION` and `CLASS` modes were intentionally removed to simplify\n   * highlighting and fix cases like\n   * ```\n   * interface Iterator[A: A]\n   *   fun has_next(): Bool\n   *   fun next(): A?\n   * ```\n   * where it is valid to have a function head without a body\n   */\n\n  return {\n    keywords: KEYWORDS,\n    contains: [\n      TYPE_NAME,\n      TRIPLE_QUOTE_STRING_MODE,\n      QUOTE_STRING_MODE,\n      SINGLE_QUOTE_CHAR_MODE,\n      PRIMED_NAME,\n      NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","keywords","KEYWORDS","keyword","meta","literal","contains","TYPE_NAME","className","begin","relevance","TRIPLE_QUOTE_STRING_MODE","end","QUOTE_STRING_MODE","BACKSLASH_ESCAPE","SINGLE_QUOTE_CHAR_MODE","PRIMED_NAME","IDENT_RE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE"]
}
