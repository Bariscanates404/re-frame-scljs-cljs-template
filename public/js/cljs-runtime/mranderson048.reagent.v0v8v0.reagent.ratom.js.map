{"version":3,"sources":["mranderson048/reagent/v0v8v0/reagent/ratom.cljs"],"mappings":";AAQA,AAAA,AACA,GAAA,QAAAA,0CAAAC,kDAAAC,yDAAAC,iEAAAC,uEAAAC;AAAA;AAAA,AAAA,mDAAA,nDAAkBC;;AAClB,GAAA,QAAAN,0CAAAC,kDAAAC,yDAAAC,iEAAAC,uEAAAG;AAAA;AAAA,AAAA,wDAAA,xDAAmBC;;AACnB,GAAA,QAAAR,0CAAAC,kDAAAC,yDAAAC,iEAAAC,uEAAAK;AAAA;AAAA,AAAA,AAAmBC,sDAAS,6CAAA,7CAACC;;AAE7B,6DAAA,7DAAeC;AAAf,AACE,UAAA,yEAAA,xEAAOC;;AAKT,qDAAA,rDAAMC;AAAN,AACE,QAAA,AAAAC,gBAAIL;;AAEN,qDAAA,rDAAeM,kHAASC;AAAxB,AACE,GAAI,MAAA,LAAMA;AAAV;;AAAe,OAASA;;;AAE1B,oDAAA,pDAAgBC,gHAAQD,EAAEE;AAA1B,AACE,IAAMC,MAAI,AAACJ,mDAAQC;AAAnB,AACE,IAAAI,oBAAK,CAAID,QAAI,AAACJ,mDAAQG;AAAtB,AAAA,GAAAE;AACK,QAAA,JAAOC;;AAAP,AACE,IAAAC,mBAAI,CAAID,MAAEF;AAAV,AAAA,GAAAG;AAAAA;;AACI,GAAI,CAAY,CAAMN,EAAEK,QAAG,CAAMH,EAAEG;AACjC,eAAO,KAAA,JAAKA;;;;AADd;;;;;;AAHXD;;;AAOJ,wDAAA,xDAAOG,wHAAYC,IAAIC;AAAvB,AACE,IAAAC,4CAAUd;IAAVe,4CAA0BH;AAA1B,AAAA,wEAAAG,vEAAUf;;AAAV,IAAA,AACE,QAACa,kCAAAA,oCAAAA;UADH,AAAA,wEAAAC,vEAAUd;;AAGZ,2DAAA,3DAAOgB,8HAAeH,EAAEI;AAAxB,AACE,cAAA,bAAM,AAAYA;;AAClB,AAAA,AACE,CAAM,AAAmBA,oBAAG,CAAMtB,wDAAW,yDAAA,xDAAKA;;;AACpD,IAAMuB,MAAI,AAACP,sDAAWM,EAAEJ;IAClBM,IAAE,AAAYF;AADpB,AAEE,kBAAA,jBAAM,AAAUA;;AAEhB,GAAU,AAACZ,kDAAOc,EAAE,AAAYF;AAAhC;AAAA,AACE,AAAmBA,mBAAEE;;;AACvBD;;AAEJ,wEAAA,xEAAOE,wJAAuBC;AAA9B,AACE,IAAAC,qBAActB;AAAd,AAAA,GAAA,CAAAsB,sBAAA;AAAA;;AAAA,QAAAA,JAAYL;AAAZ,AACE,IAAME,IAAE,AAAYF;AAApB,AACE,GAAI,MAAA,LAAME;AACR,QAAM,AAAYF,aAAG,CAAOI;;AAC5B,OAAOF,OAAEE;;;;AAEjB,2DAAA,3DAAOE,8HAAeC,IAAIC;AAA1B,AACE,GAAMhC;AAAN,AACE,AAACiC,mDAAM7B,oDAAS8B,iBAAE,CAAG,AAACC,gBAAMH,QAAK,AAACG,gBAAMJ;;AAD1C;;AAEAC;;AAEF,mDAAA,nDAAOI,8GAAOC,MAAKC,IAAIlB;AAAvB,AACE,IAAMmB,IAAE,AAAWF;AAAnB,AACE,CAAM,AAAWA,gBAAM,AAACP,yDAAcS,EAAE,AAACC,8CAAMD,EAAED,IAAIlB;;AACrD,2BAAA,nBAAM,AAAciB;;AAExB,sDAAA,tDAAOI,oHAAUJ,MAAKC;AAAtB,AACE,IAAMC,IAAE,AAAWF;AAAnB,AACE,CAAM,AAAWA,gBAAM,AAACP,yDAAcS,EAAE,AAACG,+CAAOH,EAAED;;AAClD,2BAAA,nBAAM,AAAcD;;AAExB,sDAAA,tDAAOM,oHAAUN,MAAKN,IAAIC;AAA1B,AACE,IAAMO,IAAE,AAAcF;IAChBO,IAAE,EAAI,MAAA,LAAML,gCAGH,oBAAA,WAAAM,iBAAAC,iBAAAC,jEAACC,pBACD,CAAM,AAAcX;AADpB,AAAY,IAAAY,WAAAJ;AAAA,AAAA,AAAAI,cAAAH;;AAAA,AAAAG,cAAAF;;AAAAE;MADZ,AAAWZ,HACX,mBAELE;AANV,AAOE,IAAMzB,MAAI,AAAS8B;AAAnB,AACE,QAAA,JAAO5B;;AAAP,AACE,GAAM,CAAGA,IAAEF;AAAX,AACE,IAAMoC,UAAE,CAAMN,EAAE5B;IACVI,UAAE,CAAMwB,EAAE,KAAA,JAAK5B;AADrB,AAEE,CAACI,wCAAAA,gEAAAA,1BAAE8B,6CAAAA,rCAAEb,6CAAAA,vCAAKN,6CAAAA,zCAAIC,6CAAAA;;AAChB,eAAO,CAAA,MAAKhB;;;;AAJd;;;;;AAMR,qDAAA,rDAAOmC,kHAASP,EAAEQ,OAAOC,KAAKC;AAA9B,AACE,AAACC,iBAAOH,OAAO,CAAA,oDAAA,HAAUE;;AACzB,AAACE,oBAAU,iBAAAC,4CAAUlD;IAAVmD,4CAAA;AAAA,AAAA,wEAAAA,vEAAUnD;;AAAV,IAAA,AAA+B,OAACoD,iBAAOf;UAAvC,AAAA,wEAAAa,vEAAUlD;MAAiC6C,OAAOC;;AAC7D,+BAAA,xBAACE,iBAAOH;;AAKV,GAAA,QAAA1D,0CAAAC,kDAAAC,yDAAAC,iEAAAC,uEAAA8D;AAAA;AAAA,AAAA,uDAAA,vDAAmBC;;AAEnB,yDAAA,zDAAOC,0HAAatC;AAApB,AACE,GAAM,yDAAA,xDAAMqC;AAAZ,AACE,CAAMA,uDAAU;;AAChB,AAACE;;AAFH;;AAGA,OAAOF,0DAAUrC;;AAEnB,yDAAA,zDAAMwC;AAAN,AACE;AAAA,AACE,IAAMC,IAAEJ;AAAR,AACE,GAAU,MAAA,LAAMI;AAAhB;;AAAA,AACE,wDAAA,vDAAMJ;;AACN,IAAAK,wBAAY,AAASD;AAArB,AAAA,cAAA,VAAUjD;;AAAV,AAAA,GAAA,WAAAkD,VAAUlD;AAAV,AACE,AAAc,CAAMiD,EAAEjD;;AADxB,eAAA,WAAA,VAAUA;;;;AAAV;;;;AAEA;;;;;AAER,CAAMmD,iEAAkBH;AAKxB,AAAA;AAAA;;;2DAAA,3DAAaI;;AAAb,AAEA,AAAA;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,uHAAAC,vHAASI;;AAAT,CAAA,AAAA,2GAAA,3GAASA,sHAmCM7B,EAAEL,EAAEc;;AAnCnB,AAAA,YAAA,RAmCeT;AAnCf,AAmCyB,uEAAA,hEAACO,mDAAQP,MAAEL,EAAEc;;;AAnCtC,CAAA,AAAA,2FAAA,3FAASoB,sGAgCCa;;AAhCV,AAAA,YAAA,RAgCUA;AAhCV,AAgCaV;;;AAhCb,CAAA,AAAA,2FAAA,3FAASH,sGA2CCpC;;AA3CV,AAAA,gBAAA,ZA2CUA;AA3CV,AA2CgB,OAACmD,YAAYnD;;;AA3C7B,CAAA,AAAA,6FAAA,7FAASoC,wGAKEM,EAAEC;;AALb,AAAA,YAAA,RAKWD;AALX,AAKoB,QAAYA,UAAEC;;;AALlC,CAAA,AAAA,mGAAA,nGAASP,8GAaG7B,EAAEqC;;AAbd,AAAA,YAAA,RAaYrC;AAbZ,AAcI,GAAU,qBAAA,pBAAMiC;AAAhB;AAAA,AACE,oBAAQ,CAACA,iDAAAA,4DAAAA,bAAUI,yCAAAA;AAAnB;AAAA,AAAA,MAAA,KAAAC,MAAA,CAAA,kBAAA,qCAAA,KAAA;;;;AACF,IAAMC,YAAUR;AAAhB,AACE,CAAMA,eAAMM;;AACZ,GAAU,mBAAA,lBAAMH;AAAhB;AAAA,AACE,AAACnC,oDAASC,MAAEuC,UAAUF;;;AACxBA;;;AApBN,CAAA,AAAA,iGAAA,jGAASR,4GAuBE7B,EAAExB;;AAvBb,AAAA,YAAA,RAuBWwB;AAvBX,AAuByB,OAASA,kDAAE,CAACxB,kCAAAA,gDAAAA,hBAAEuD,6BAAAA;;;AAvBvC,CAAA,AAAA,iGAAA,jGAASF,4GAwBE7B,EAAExB,EAAET;;AAxBf,AAAA,YAAA,RAwBWiC;AAxBX,AAwByB,OAASA,kDAAE,CAACxB,kCAAAA,kDAAAA,lBAAEuD,+BAAAA,lBAAMhE,+BAAAA;;;AAxB7C,CAAA,AAAA,iGAAA,jGAAS8D,4GAyBE7B,EAAExB,EAAET,EAAEE;;AAzBjB,AAAA,YAAA,RAyBW+B;AAzBX,AAyByB,OAASA,kDAAE,CAACxB,kCAAAA,oDAAAA,pBAAEuD,iCAAAA,pBAAMhE,iCAAAA,/BAAEE,iCAAAA;;;AAzB/C,CAAA,AAAA,iGAAA,jGAAS4D,4GA0BE7B,EAAExB,EAAET,EAAEE,EAAEuE;;AA1BnB,AAAA,YAAA,RA0BWxC;AA1BX,AA0ByB,OAASA,kDAAE,AAACyC,8CAAMjE,EAAEuD,aAAMhE,EAAEE,EAAEuE;;;AA1BvD,CAAA,AAAA,0GAAA,1GAASX,qHAsCWpC,MAAKN,IAAIC;;AAtC7B,AAAA,gBAAA,ZAsCoBK;AAtCpB,AAsCkC,OAACM,oDAASN,UAAKN,IAAIC;;;AAtCrD,CAAA,AAAA,qGAAA,rGAASyC,gHAuCMpC,MAAKC,IAAIlB;;AAvCxB,AAAA,gBAAA,ZAuCeiB;AAvCf,AAuCkC,OAACD,iDAAMC,UAAKC,IAAIlB;;;AAvClD,CAAA,AAAA,wGAAA,xGAASqD,mHAwCSpC,MAAKC;;AAxCvB,AAAA,gBAAA,ZAwCkBD;AAxClB,AAwCkC,OAACI,oDAASJ,UAAKC;;;AAxCjD,CAAA,AAAA,oGAAA,pGAASmC,+GA6BMa,EAAEC;;AA7BjB,AAAA,YAAA,RA6BeD;AA7Bf,AA6B2B,YAAAb,iDAAQE,aAAMY,SAASV,iBAAUC;;;AA7B5D,CAAA,AAAA,6FAAA,7FAASL,wGAQEpC;;AARX,AAAA,gBAAA,ZAQWA;AARX,AASI,AAACV,sEAAsBU;;AACvBsC;;;AAVJ,CAAA,4DAAA,5DAASF;AAAT,AAAA,AAAA;;;AAAA,CAAA,kEAAA,lEAASA;;AAAT,CAAA,qEAAA,rEAASA;;AAAT,CAAA,0EAAA,WAAAH,mBAAAC,qBAAAC,7HAASC;AAAT,AAAA,OAAAlB,iBAAAgB,qBAAA;;;AAAA;;;wDAAA,xDAASG,wHAAiBC,MAAMC,KAAKC,UAAoBC;AAAzD,AAAA,YAAAL,iDAA0BE,MAAMC,KAAKC,UAAoBC;;;AAAhDL,AA6CT,AAAA;;;kDAAA,0DAAAgB,5GAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,8EAAA,CAAA,UAAA;;;;AAAA,IAAAC,yBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,4BAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,gCAAA,AAAA,KAAAI,qBAAA,AAAAJ,6BAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAD,qFAAA,CAAA,UAAA,MAAAI;;;;;AAAA,CAAA,gFAAA,hFAAMJ,2FAEFhF;AAFJ,AAEO,+DAAA,KAAA,KAAA,lEAAC+D,sDAAQ/D;;;AAFhB,AAAA,CAAA,uFAAA,aAAAsF,pGAAMN,kGAGFhF;AAHJ,AAAA,IAAAuF,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;WAAA,AAAAE,4CAAAF,eAAA,lEAGgBtB;gBAHhB,AAAAwB,4CAAAF,eAAA,vEAGqBrB;AAHrB,AAGkC,8EAAA,vEAACH,sDAAQ/D,EAAEiE,KAAKC;;;AAHlD;AAAA,CAAA,oEAAA,WAAAwB,/EAAMV;AAAN,AAAA,IAAAW,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,CAAA,0EAAA,1EAAMV;;AAAN,AAQA,AAAA,AAEA,uDAAA,vDAAkCe;AAElC,6DAAA,7DAAOC,kIAAiBvF,EAAE2D,EAAE7B,EAAE/B,IAAIyF;AAAlC,AACE,IAAMC,IAAE,CAAM9B,EAAE2B,AAAA;IACVG,QAAE,eAAA,bAAI,MAAA,LAAMA,+CAAMA;IAClBrF,IAAE,6EAAA,2BAAA,vGAACqF,sCAAAA,8CAAAA,VAAE3D,2BAAAA;AAFX,AAGE,GACE,GAAA,MAAA,LAAO1B;AAAG,OAACmC,iBAAOnC;;AADpB,GAEE,yEAAA,xEAAMjB;AAAiB,QAACa,kCAAAA,oCAAAA;;AAF1B,AAGQ,IAAMI,QAAE,iBAAAsF,WACC1F;IADD2F,WAAA;IAAAC,WACe,WAAKrG;AAAL,AACE,GAAMX;AAAN,AAAY,AAACiC,mDAAM7B,oDAAS8G;;AAA5B;;AACA,cAAM,CAAMnC,EAAE2B,AAAA,bAAWpB;IAAAA,cACvB,AAAC5C,+CAAO4C,QAAEpC;AADZ,AAEE,CAAM6B,EAAE2B,AAAA,uBAAUpB;;AACpB,GAAM,GAAA,QAAA,PAAOnE;AAAb,AACE,gBAAA,fAAM,AAAYA;;AADpB;;AAEA,GAAM,GAAA,YAAA,XAAOyF;AAAb,AACE,QAACA,wCAAAA,2CAAAA,LAAQjG,wBAAAA;;AADX;;;AARjB,AAAA,wLAAAmG,SAAAC,SAAAC,gFAAAF,SAAAC,SAAAC,pSAACC,yFAAAA,qHAAAA;;IAUHE,IAAE,AAACxD,iBAAOnC;AAVhB,AAWE,CAAMuD,EAAE2B,AAAA,uBAAU,AAAClE,8CAAMqE,MAAE3D,EAAE1B;;AAC7B,GAAMxB;AAAN,AAAY,AAACiC,mDAAM7B,oDAASgH;;AAA5B;;AACA,GAAM,GAAA,QAAA,PAAOjG;AAAb,AACE,CAAM,AAAYA,eAAKK;;AADzB;;AAEA2F;;;;;AAEd,AAAA;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,uHAAA9C,vHAASgD;;AAAT,CAAA,AAAA,6FAAA,7FAASA,wGAIEhF;;AAJX,AAAA,gBAAA,ZAIWA;AAJX,AAKI,IAAAoF,qBAAYD;AAAZ,AAAA,GAAA,CAAAC,sBAAA;AAEE,kEAAA,3DAACd;AAAD,AAAkB,OAACtB,8CAAMjE,SAAEmG;kCAA3B,/BAAiCnG,SAAEmG,YAAKlF;;AAF1C,QAAAoF,JAAUjG;AAAV,AACE,OAACmC,iBAAOnC;;;;AANd,CAAA,AAAA,6FAAA,7FAAS6F,wGAUE/B,EAAEN;;AAVb,AAAA,YAAA,RAUWM;AAVX,AAWI,kFAAA,zEAAK,kBAAW+B,jBAAMrC,0EACjB,AAAC0C,6CAAEtG,SAAE,AAAK4D,cACV,AAAC0C,6CAAEH,YAAK,AAAQvC;;;AAbzB,CAAA,AAAA,2FAAA,3FAASqC,sGAgBC/B;;AAhBV,AAAA,YAAA,RAgBUA;AAhBV,AAgBa,sBAAA,fAACqC,kGAAMvG,SAAEmG;;;AAhBtB,CAAA,AAAA,2GAAA,3GAASF,sHAmBMzE,EAAEL,EAAEc;;AAnBnB,AAAA,YAAA,RAmBeT;AAnBf,AAmByB,uEAAA,hEAACO,mDAAQP,MAAEL,EAAEc;;;AAnBtC,CAAA,4DAAA,5DAASgE;AAAT,AAAA,AAAA;;;AAAA,CAAA,kEAAA,lEAASA;;AAAT,CAAA,qEAAA,rEAASA;;AAAT,CAAA,0EAAA,WAAA/C,mBAAAC,qBAAAC,7HAAS6C;AAAT,AAAA,OAAA9D,iBAAAgB,qBAAA;;;AAAA;;;wDAAA,xDAAS+C,wHAAOlG,EAAEmG,KAAeC;AAAjC,AAAA,YAAAH,iDAAgBjG,EAAEmG,KAAeC;;;AAAxBH,AAqBT,wDAAA,xDAAMO,wHAAYxG,EAAEmG;AAApB,AACE,YAAAF,wDAAA,PAAQjG,EAAEmG;;AAEZ,8DAAA,9DAAMM,oIAAazG,EAAEmG;AAArB,AACE,IAAMO,IAAE,AAACF,sDAAWxG,EAAEmG;IAChB/F,IAAE,iBAAAuG,WAAA;AAAA,AAAgB,OAAQD;;IAAxBE,WAAA;IAAAC,WAAA;AAAA,AAAA,wLAAAF,SAAAC,SAAAC,gFAAAF,SAAAC,SAAAC,pSAAChB,yFAAAA,qHAAAA;;AADT,AAAA,AAAAxG,gBAGGe;;AACDA;;AAEJ,AAAA,mDAAA,2DAAAiE,9GAAM2C;AAAN,AAAA,IAAAF,qBAAA;AAAA,AAAA,IAAArC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAqC,wBAAA,CAAA,UAAApC;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAqC,uBAAA,EAAA,CAAA,MAAA,AAAAD,4BAAA,AAAA,KAAAlC,qBAAA,AAAAkC,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAE,sFAAA,CAAA,UAAA,MAAAD;;;AAAA,AAAA,CAAA,wFAAA,xFAAMC,mGAAOhH,EAAImG;AAAjB,AAAA,GACS,AAACgB,qBAAKnH;AADf;AAAA,AAAA,MAAA,KAAA8D,MAAA;;;AAEE,OAAC0C,sDAAWxG,EAAEmG;;;AAFhB,CAAA,2EAAA,3EAAMa;;AAAN;AAAA,CAAA,qEAAA,WAAAC,hFAAMD;AAAN,AAAA,IAAAE,WAAA,AAAA/B,gBAAA8B;IAAAA,eAAA,AAAA7B,eAAA6B;AAAA,AAAA,IAAA5B,qBAAA;AAAA,AAAA,OAAAA,wDAAA6B,SAAAD;;;AAAA,AAIA,AAAA,yDAAA,iEAAA5C,1HAAM+C;AAAN,AAAA,IAAAN,qBAAA;AAAA,AAAA,IAAArC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAqC,wBAAA,CAAA,UAAApC;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAqC,uBAAA,EAAA,CAAA,MAAA,AAAAD,4BAAA,AAAA,KAAAlC,qBAAA,AAAAkC,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAM,4FAAA,CAAA,UAAA,MAAAL;;;AAAA,AAAA,CAAA,8FAAA,9FAAMK,yGAAQpH,EAAImG;AAAlB,AAAA,GACS,AAACgB,qBAAKnH;AADf;AAAA,AAAA,MAAA,KAAA8D,MAAA;;;AAEE,OAAC2C,4DAAYzG,EAAEmG;;;AAFjB,CAAA,iFAAA,jFAAMiB;;AAAN;AAAA,CAAA,2EAAA,WAAAC,tFAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAnC,gBAAAkC;IAAAA,eAAA,AAAAjC,eAAAiC;AAAA,AAAA,IAAAhC,qBAAA;AAAA,AAAA,OAAAA,wDAAAiC,SAAAD;;;AAAA,AAMA,AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,qEAAA,rEAASE;;AAAT,AAAA,YAAA,RAYUtG;AAZV,AAaI,IAAA0G,4CAAUxI;IAAVyI,4CAAA;AAAA,AAAA,wEAAAA,vEAAUzI;;AAAV,IAAA,AACE,OAAQ8B;UADV,AAAA,wEAAA0G,vEAAUxI;;;AAbd,CAAA,AAAA,0EAAA,1EAASoI,qFAgBWM,SAASC;;AAhB7B,AAAA,YAAA,RAgBe7G;AAhBf,AAiBI,GAAU,CAAY4G,aAASC;AAA/B;;AAAA,AACE,CAAMvE,eAAMuE;;AACZ,GAAM,GAAA,mBAAA,lBAAOpE;AAAb,AACE,OAACnC,oDAASN,MAAK4G,SAASC;;AAD1B;;;;;AAnBN,CAAA,AAAA,yHAAA7E,zHAASsE;;AAAT,CAAA,AAAA,6GAAA,7GAASA,wHAoDM/F,EAAEL,EAAEc;;AApDnB,AAAA,YAAA,RAoDeT;AApDf,AAoDyB,OAACO,mDAAQP,MAAEL,EAAEc,KAAK,CAAA,uDAAgByF;;;AApD3D,CAAA,AAAA,6FAAA,7FAASH,wGA4DCrD;;AA5DV,AAAA,YAAA,RA4DUA;AA5DV,AA4Da,sBAAA,fAACqC,kGAAMkB,aAAMC;;;AA5D1B,CAAA,AAAA,+FAAA,/FAASH,0GAMErD,EAAEN;;AANb,AAAA,YAAA,RAMWM;AANX,AAOI,oFAAA,3EAAK,kBAAWqD,jBAAQ3D,4EACnB,AAAC0C,6CAAEoB,YAAK,AAAQ9D,iBAChB,AAAC0C,6CAAEmB,aAAM,AAAS7D;;;AAT3B,CAAA,AAAA,qGAAA,rGAAS2D,gHAmCGtG,MAAK4C;;AAnCjB,AAAA,gBAAA,ZAmCY5C;AAnCZ,AAoCI,IAAM4G,WAAStE;AAAf,AACE,AAAatC,qBAAK4G,SAAShE;;AAC3B,GAAI,EAAA,GAAA,iBAAA,SAAA,EAAA,EAAA,CAAA,mDAAA,cAAA,CAAAZ,gCAAA,mCAAA,KAAA,EAAA,EAAA,mDAAA,AAAA8E,iEAAA,QAAA,AAAAA,vCAAYC,yEAAAA,1UAAOP,8BAAAA,kGAAAA,4CAAAA,sGAAAA,yEAAAA;AACrB,GAAI,yDAAA,zDAACnB,6CAAEoB;AACL,AAACQ,sBAAOT,aAAM5D;;AACd,AAAChD,mDAAM4G,aAAMU,mBAAST,YAAK7D;;;AAC7B,CAAC4D,6CAAAA,oEAAAA,zBAAMC,iDAAAA,rCAAK7D,iDAAAA;;;AACdA;;;AA3CN,CAAA,AAAA,mGAAA,nGAAS0D,8GA8CE/F,EAAExB;;AA9Cb,AAAA,YAAA,RA8CWwB;AA9CX,AA8CyB,OAASA,kDAAE,iBAAA4G,WAAG,AAAQ5G;AAAX,AAAA,0EAAA4G,yBAAAA,3FAACpI,kCAAAA,4CAAAA;;;;AA9CrC,CAAA,AAAA,mGAAA,nGAASuH,8GA+CE/F,EAAExB,EAAET;;AA/Cf,AAAA,YAAA,RA+CWiC;AA/CX,AA+CyB,OAASA,kDAAE,iBAAA6G,WAAG,AAAQ7G;IAAX8G,WAAc/I;AAAd,AAAA,0EAAA8I,SAAAC,yBAAAD,SAAAC,7GAACtI,kCAAAA,qDAAAA;;;;AA/CrC,CAAA,AAAA,mGAAA,nGAASuH,8GAgDE/F,EAAExB,EAAET,EAAEE;;AAhDjB,AAAA,YAAA,RAgDW+B;AAhDX,AAgDyB,OAASA,kDAAE,iBAAA+G,WAAG,AAAQ/G;IAAXgH,WAAcjJ;IAAdkJ,WAAgBhJ;AAAhB,AAAA,0EAAA8I,SAAAC,SAAAC,yBAAAF,SAAAC,SAAAC,/HAACzI,kCAAAA,8DAAAA;;;;AAhDrC,CAAA,AAAA,mGAAA,nGAASuH,8GAiDE/F,EAAExB,EAAET,EAAEE,EAAEuE;;AAjDnB,AAAA,YAAA,RAiDWxC;AAjDX,AAiDyB,OAASA,kDAAE,AAACyC,8CAAMjE,EAAE,AAAQwB,cAAGjC,EAAEE,EAAEuE;;;AAjD5D,CAAA,AAAA,4GAAA,5GAASuD,uHAuDWtG,MAAKN,IAAIC;;AAvD7B,AAAA,gBAAA,ZAuDoBK;AAvDpB,AAuDkC,OAACM,oDAASN,UAAKN,IAAIC;;;AAvDrD,CAAA,AAAA,uGAAA,vGAAS2G,kHAwDMtG,MAAKC,IAAIlB;;AAxDxB,AAAA,gBAAA,ZAwDeiB;AAxDf,AAwDkC,OAACD,iDAAMC,UAAKC,IAAIlB;;;AAxDlD,CAAA,AAAA,0GAAA,1GAASuH,qHAyDStG,MAAKC;;AAzDvB,AAAA,gBAAA,ZAyDkBD;AAzDlB,AAyDkC,OAACI,oDAASJ,UAAKC;;;AAzDjD,CAAA,AAAA,+FAAA,/FAASqG,0GAuBEtG;;AAvBX,AAAA,gBAAA,ZAuBWA;AAvBX,AAwBI,IAAM4G,WAAStE;IACTuE,WAAS,iBAAAzB,qBAAYD;AAAZ,AAAA,GAAA,CAAAC,sBAAA;AAEE,IAAMrG,IAAE,mXAAA,jXAAI,EAAA,GAAA,iBAAA,SAAA,EAAA,EAAA,CAAA,mDAAA,cAAA,CAAAiD,gCAAA,mCAAA,KAAA,EAAA,EAAA,mDAAA,AAAA8E,iEAAA,QAAA,AAAAA,vCAAYC,yEAAAA,1UAAOP,8BAAAA,kGAAAA,4CAAAA,sGAAAA,yEAAAA;AAAvB,AACG,sDAAA,AAAApI,/CAAC4I,+DAAQR,cAAMC;GADlB;AAAA,AAEG,QAACD,6CAAAA,0DAAAA,fAAMC,uCAAAA;;AAFlB,AAGE,uGAAA,hGAACnC,2DAAgBvF,EAAEyH,aAAMC,YAAKzG;;AALlC,QAAAoF,JAAUjG;AAAV,AACE,OAACmC,iBAAOnC;;;AAFzB,AAOE,AAAaa,qBAAK4G,SAASC;;AAC3BA;;;AAhCN,CAAA,8DAAA,9DAASP;AAAT,AAAA,AAAA;;;AAAA,CAAA,oEAAA,pEAASA;;AAAT,CAAA,uEAAA,vEAASA;;AAAT,CAAA,4EAAA,WAAArE,mBAAAC,qBAAAC,/HAASmE;AAAT,AAAA,OAAApF,iBAAAgB,qBAAA;;;AAAA;;;0DAAA,1DAASqE,4HAASC,MAAMC,KAAetB,SACX7C,MAAgBG;AAD5C,AAAA,YAAA6D,mDAAkBE,MAAMC,KAAetB,SACX7C,MAAgBG;;;AADnC6D,AA8DT,oDAAA,pDAAMmB,gHACHC,IAAIjB;AADP,AAEE,GAAQ,iBAAA7H,mBAAI,EAAA,GAAA,QAAA,SAAA,EAAA,EAAA,WAAA,CAAAoD,gCAAA,kEAAA,KAAA,EAAA,EAAA,yCAAA,AAAA8E,gGAAA,QAAA,AAAAA,tEAAY/E,wGAAAA,9TAAc2F,gEAAAA,2EAAAA,oIAAAA,wGAAAA;AAA9B,AAAA,GAAA9I;AAAAA;;AACI,SAAK,AAACsH,qBAAKwB,UACN,GAAK,AAACC,wBAAQD;;;AAF/B;AAAA,AAAA,MAAA,KAAA7E,MAAA,CAAA,iMAAA,KAAA,pLAGQ,CAAA,kDACK,AAAC+E,wGAAOF;;;AACrB,wEAAA,KAAA,KAAA,3EAACnB,wDAAUmB,IAAIjB;;AAKjB,8DAAA,9DAAMoB,oIAAkB/C;AAAxB,AACE,IAAAtF,qBAAc,AAAWsF;AAAzB,AAAA,GAAA,CAAAtF,sBAAA;AAAA;;AAAA,QAAAA,JAAYT;AAAZ,AACE,QAACA,kCAAAA,oCAAAA;;;AAEL,6DAAA,7DAAM+I,kIAAiB7H;AAAvB,AACE,IAAAmF,qBAAYlH;AAAZ,AAAA,GAAA,CAAAkH,sBAAA;AAGE;;AAHF,QAAAA,JAAU/F;AAAV,AACE,wFAAA,jFAACiF,2DAAgByD,gBAAM1I,EAAEY,SACJ4H;;;AAMzB,AAAA;AAAA;;;yDAAA,zDAAaY;;AAAb,IAAAT,iFAAA,WACahI;AADb,AAAA,IAAAiI,kBAAA,EAAA,UAAA,OAAA,hBACajI,qBAAAA;IADbkI,kBAAA,CAAAC,yDAAA,AAAAC,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TACalI,oCAAAA;;AADb,IAAAqI,kBAAA,CAAAF,yDAAA;AAAA,AAAA,GAAA,GAAA,CAAAE,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TACarI,oCAAAA;;AADb,MAAA,AAAAsI,2BAAA,uBACatI;;;;AADb,AAAA,2DAAA,3DACGmI,8HAAUnI;AADb,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,sFAAA,hHACaA,0BAAAA;AADb,OACaA,mFAAAA;;AADb,OAAAgI,+EACahI;;;;AADb,IAAAuI,wFAAA,WAEoBvI,MAAKjB;AAFzB,AAAA,IAAAkJ,kBAAA,EAAA,UAAA,OAAA,hBAEoBjI,qBAAAA;IAFpBkI,kBAAA,CAAAM,gEAAA,AAAAJ,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,yDAAAA,XAEoBlI,sCAAAA,hCAAKjB,sCAAAA;;AAFzB,IAAAsJ,kBAAA,CAAAG,gEAAA;AAAA,AAAA,GAAA,GAAA,CAAAH,mBAAA;AAAA,QAAAA,gDAAAA,yDAAAA,XAEoBrI,sCAAAA,hCAAKjB,sCAAAA;;AAFzB,MAAA,AAAAuJ,2BAAA,8BAEoBtI;;;;AAFpB,AAAA,kEAAA,lEAEGwI,4IAAiBxI,MAAKjB;AAFzB,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,6FAAA,vHAEoBiB,0BAAAA;AAFpB,OAEoBA,0FAAAA,MAAKjB;;AAFzB,OAAAwJ,sFAEoBvI,MAAKjB;;;;AAFzB,AAIA,AAAA;AAAA;;;uDAAA,vDAAa6J;;AAAb,IAAAF,qEAAA,WACQ1I;AADR,AAAA,IAAAiI,kBAAA,EAAA,UAAA,OAAA,hBACQjI,qBAAAA;IADRkI,kBAAA,CAAAS,+CAAA,AAAAP,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TACQlI,oCAAAA;;AADR,IAAAqI,kBAAA,CAAAM,+CAAA;AAAA,AAAA,GAAA,GAAA,CAAAN,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TACQrI,oCAAAA;;AADR,MAAA,AAAAsI,2BAAA,gBACQtI;;;;AADR,AAAA,iDAAA,jDACG2I,0GAAK3I;AADR,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,0EAAA,pGACQA,0BAAAA;AADR,OACQA,uEAAAA;;AADR,OAAA0I,mEACQ1I;;;;AADR,AAGA,oEAAA,pEAAO6I,gJAAwB7I,MAAK8I,OAAOpJ,IAAIC;AAA/C,AACE,OAAiBK,qBAAK8I,OAAOpJ,IAAIC;;AAGnC,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,yEAAA,zEAASsJ;;AAAT,AAAA,YAAA,RAiCajJ;AAjCb,AAkCI,IAAAmK,4CAAUjM;IAAVkM,4CAAA;AAAA,AAAA,wEAAAA,vEAAUlM;;AAAV,IAAA,AACE,OAAQ8B;UADV,AAAA,wEAAAmK,vEAAUjM;;;AAlCd,CAAA,AAAA,+EAAA,/EAAS+K,0FAqCeH,OAAOc,OAAOF;;AArCtC,AAAA,YAAA,RAqCmB1J;AArCnB,AAsCI,GAAU,EAAI,CAAY4J,WAAOF,aACnBP;AADd;;AAAA,AAEE,GAAI,oBAAA,nBAAMG;AACR,AACE,uBAAA,tBAAMH;;AACN,OAAC1H,uDAAYzB;;AACf,GAAI,AAAOsJ;AACT,kBAAA,XAAOtJ;;AACP,QAACsJ,gDAAAA,uDAAAA,TAAStJ,oCAAAA;;;;;;AA9CpB,CAAA,AAAA,iFAAA,jFAASiJ,4FAgDiB1J;;AAhD1B,AAAA,YAAA,RAgDqBS;AAhDrB,AAiDI,IAAML,OAAI,AAAC0K,cAAI9K;IACTG,MAAI,AAAC2K,cAAIhB;AADf,AAEE,CAAMA,kBAAS9J;;AACf,IAAA+K,mBAAA,AAAAC,cAAU,AAACS,qDAAarL,KAAID;IAA5B8K,qBAAA;IAAAC,qBAAA;IAAAC,iBAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,iBAAAD;AAAA,cAAA,AAAAD,yDAAAE,nEAAQxK;AAAR,AAAA,AACE,AAAC+K,qBAAW/K,QAAEF,MAAK6I;;AADrB;AAAA,eAAAyB;eAAAE;eAAAC;eAAA,CAAAC,iBAAA;;;;;;;AAAA,IAAAC,2BAAA,AAAAJ,cAAAD;AAAA,AAAA,GAAAK;AAAA,AAAA,IAAAL,uBAAAK;AAAA,AAAA,GAAA,AAAAC,6BAAAN;AAAA,IAAAO,wBAAA,AAAAC,sBAAAR;AAAA,AAAA,eAAA,AAAAS,qBAAAT;eAAAO;eAAA,AAAA/K,gBAAA+K;eAAA;;;;;;;AAAA,cAAA,AAAA3G,gBAAAoG,1BAAQpK;AAAR,AAAA,AACE,AAAC+K,qBAAW/K,QAAEF,MAAK6I;;AADrB;AAAA,eAAA,AAAA1E,eAAAmG;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;AAEA,IAAAY,aAAA,AAAAX,cAAU,AAACS,qDAAatL,IAAIC;IAA5BwL,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,QAAA,AAAAD,mDAAAE,vDAAQnL;AAAR,AAAA,AACE,AAACoL,wBAAcpL,EAAEF;;AADnB;AAAA,eAAAkL;eAAAC;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAV,qBAAA,AAAAJ,cAAAW;AAAA,AAAA,GAAAP;AAAA,AAAA,IAAAO,iBAAAP;AAAA,AAAA,GAAA,AAAAC,6BAAAM;AAAA,IAAAL,kBAAA,AAAAC,sBAAAI;AAAA,AAAA,eAAA,AAAAH,qBAAAG;eAAAL;eAAA,AAAA/K,gBAAA+K;eAAA;;;;;;;AAAA,QAAA,AAAA3G,gBAAAgH,pBAAQhL;AAAR,AAAA,AACE,AAACoL,wBAAcpL,EAAEF;;AADnB;AAAA,eAAA,AAAAmE,eAAA+G;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;;AAtDN,CAAA,AAAA,4EAAA,5EAASjC;;AAAT,AAAA,YAAA,RAyDgBjJ;AAzDhB,AA0DI,GAAM,EAAKmJ,yBAAO,GAAA,oBAAA,nBAAOE;AAAzB,AACE,kBAAA,XAAOrJ;;AADT;;;;AA1DJ,CAAA,AAAA,6EAAA,7EAASiJ,wFA6DalK;;AA7DtB,AAAA,YAAA,RA6DiBiB;AA7DjB,AA8DI,IAAA,AACE,iBAAA,hBAAMuJ;;AACN,OAACrK,yDAAcH,MAAEiB;gBAFnB,QAAAuL,JAGkBC;AAHlB,AAII,CAAMlJ,eAAMkJ;;AACZ,CAAMjC,gBAAOiC;;AACb,8BAAA,tBAAMrC;;;AApEd,CAAA,AAAA,qEAAA,rEAASF,gFAsEKwC;;AAtEd,AAAA,YAAA,RAsESzL;AAtET,AAuEI,IAAM4G,WAAStE;IACTlD,MAAI,kBAAIqM,OACF,AAAezL,mBAAKjB,UACpB,AAACG,yDAAcH,SAAEiB;AAH7B,AAIE,GAAUoJ;AAAV;AAAA,AACE,CAAM9G,eAAMlD;;AAGZ,GAAU,EAAI,mBAAA,lBAAMqD,6BACN,AAAC4C,6CAAEuB,SAASxH;AAD1B;AAAA,AAEE,AAACkB,oDAASN,MAAK4G,SAASxH;;;;AAC5BA;;;AAlFN,CAAA,AAAA,0EAAA,WAAA2J,rFAASE;;AAAT,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAAlF,4BAAAkF;mBAAA,AAAAjF,4CAAAiF,eAAA,1EAoF2BM;aApF3B,AAAAvF,4CAAAiF,eAAA,pEAoFoC0C;iBApFpC,AAAA3H,4CAAAiF,eAAA,xEAoF2C2C;eApF3C,AAAA5H,4CAAAiF,eAAA,tEAoFsD4C;AApFtD,AAAA,YAAA,RAoFc5L;AApFd,AAqFI,GAAM,GAAA,iBAAA,hBAAOsJ;AAAb,AACE,CAAM,AAAYtJ,iBAAMsJ;;AAD1B;;AAEA,GAAM,GAAA,WAAA,VAAOoC;AAAb,AACE,CAAM,AAAU1L,eAAM0L;;AADxB;;AAEA,GAAM,GAAA,eAAA,dAAOC;AAAb,AACE,CAAM,AAAc3L,mBAAM2L;;AAD5B;;AAEA,GAAM,GAAA,aAAA,ZAAOC;AAAb,AACE,QAAM,AAAY5L,uBAAM4L;;AAD1B;;;;AA3FJ,CAAA,AAAA,0HAAA5J,1HAASiH;;AAAT,CAAA,AAAA,8GAAA,9GAASA,yHAgJM1I,EAAEL,EAAEc;;AAhJnB,AAAA,YAAA,RAgJeT;AAhJf,AAgJyB,OAACO,mDAAQP,MAAEL,EAAEc,KAAK,CAAA,+EAAA,vBAAiB,AAACsE,eAAK/E;;;AAhJlE,CAAA,AAAA,8FAAA,9FAAS0I,yGAmJCjJ;;AAnJV,AAAA,gBAAA,ZAmJUA;AAnJV,AAmJgB,OAACmD,YAAYnD;;;AAnJ7B,CAAA,AAAA,gGAAA,hGAASiJ,2GA6IEvG,EAAEC;;AA7Ib,AAAA,YAAA,RA6IWD;AA7IX,AA6IoB,QAAYA,UAAEC;;;AA7IlC,CAAA,AAAA,wHAAAX,xHAASiH;;AAAT,CAAA,AAAA,6IAAA,7IAASA,wJAuHIjJ;;AAvHb,AAAA,gBAAA,ZAuHaA;AAvHb,AAwHI,IAAMiB,IAAEqB;IACFwJ,KAAGzC;AADT,AAEE,mBAAA,lBAAMA;;AACN,gBAAA,fAAM/G;;AACN,mBAAA,lBAAMgH;;AACN,uBAAA,tBAAMH;;AACN,IAAA4C,mBAAA,AAAAxB,cAAU,AAACF,cAAIyB;IAAfE,qBAAA;IAAAC,qBAAA;IAAAC,iBAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,iBAAAD;AAAA,cAAA,AAAAD,yDAAAE,nEAAQhM;AAAR,AAAA,AACE,AAACoL,wBAAcpL,QAAEF;;AADnB;AAAA,eAAA+L;eAAAC;eAAAC;eAAA,CAAAC,iBAAA;;;;;;;AAAA,IAAAvB,2BAAA,AAAAJ,cAAAwB;AAAA,AAAA,GAAApB;AAAA,AAAA,IAAAoB,uBAAApB;AAAA,AAAA,GAAA,AAAAC,6BAAAmB;AAAA,IAAAlB,wBAAA,AAAAC,sBAAAiB;AAAA,AAAA,eAAA,AAAAhB,qBAAAgB;eAAAlB;eAAA,AAAA/K,gBAAA+K;eAAA;;;;;;;AAAA,cAAA,AAAA3G,gBAAA6H,1BAAQ7L;AAAR,AAAA,AACE,AAACoL,wBAAcpL,QAAEF;;AADnB;AAAA,eAAA,AAAAmE,eAAA4H;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;AAEA,GAAM,GAAA,yBAAA,xBAAO,AAAc/L;AAA3B,AACE,AAAaA,qBAAKiB;;AADpB;;AAEA,IAAAzB,qBAAc,AAAkBQ;AAAhC,AAAA,GAAA,CAAAR,sBAAA;AAAA;;AAAA,QAAAA,JAAYe;AAAZ,AACE,IAAAsB,kBAAY,AAAStB;AAArB,AAAA,QAAA,JAAU5B;;AAAV,AAAA,GAAA,KAAAkD,JAAUlD;AAAV,AACE,IAAAwN,qBAAC,CAAM5L,EAAE5B;AAAT,AAAA,CAAAwN,mDAAAA,8DAAAA,bAAYnM,2CAAAA;;AADd,eAAA,KAAA,JAAUrB;;;;AAAV;;;;;;;AAnIR,CAAA,AAAA,oJAAA,pJAASsK,+JAsIWjJ,MAAKjB;;AAtIzB,AAAA,gBAAA,ZAsIoBiB;AAtIpB,AAwII,IAAAoF,qBAAY,AAAkBpF;AAA9B,AAAA,GAAA,CAAAoF,sBAAA;AAEE,QAAM,AAAkBpF,2BAAM,CAAOjB;;AAFvC,QAAAqG,JAAU7E;AAAV,AACE,OAAOA,OAAExB;;;;AAzIf,CAAA,AAAA,sGAAA,tGAASkK,iHAkBG1I,EAAEmJ;;AAlBd,AAAA,YAAA,RAkBYnJ;AAlBZ,AAmBI,GAAQ,AAACoJ,oBAAI,AAAUpJ;AAAvB;AAAA,AAAA,MAAA,KAAAsC,MAAA,CAAA,kBAAA,+CAAA,KAAA;;;AACA,IAAM+G,SAAOtH;AAAb,AACE,CAAMA,eAAMoH;;AACZ,AAASnJ,aAAEqJ,OAAOF;;AAClB,AAACpJ,oDAASC,MAAEqJ,OAAOF;;AACnBA;;;AAxBN,CAAA,AAAA,oGAAA,pGAAST,+GA2BE1I,EAAExB;;AA3Bb,AAAA,YAAA,RA2BWwB;AA3BX,AA2ByB,OAASA,kDAAE,iBAAAsJ,WAAG,AAAWtJ;AAAd,AAAA,kFAAAsJ,6BAAAA,vGAAC9K,sCAAAA,gDAAAA;;;;AA3BrC,CAAA,AAAA,oGAAA,pGAASkK,+GA4BE1I,EAAExB,MAAET;;AA5Bf,AAAA,YAAA,RA4BWiC;AA5BX,AA4ByB,OAASA,kDAAE,iBAAAuJ,WAAG,AAAWvJ;IAAdwJ,WAAiBzL;AAAjB,AAAA,kFAAAwL,SAAAC,6BAAAD,SAAAC,zHAAChL,sCAAAA,yDAAAA;;;;AA5BrC,CAAA,AAAA,oGAAA,pGAASkK,+GA6BE1I,EAAExB,MAAET,EAAEE;;AA7BjB,AAAA,YAAA,RA6BW+B;AA7BX,AA6ByB,OAASA,kDAAE,iBAAAyJ,WAAG,AAAWzJ;IAAd0J,WAAiB3L;IAAjB4L,WAAmB1L;AAAnB,AAAA,kFAAAwL,SAAAC,SAAAC,6BAAAF,SAAAC,SAAAC,3IAACnL,sCAAAA,kEAAAA;;;;AA7BrC,CAAA,AAAA,oGAAA,pGAASkK,+GA8BE1I,EAAExB,MAAET,EAAEE,EAAEuE;;AA9BnB,AAAA,YAAA,RA8BWxC;AA9BX,AA8ByB,OAASA,kDAAE,AAACyC,8CAAMjE,MAAE,AAAWwB,iBAAGjC,EAAEE,EAAEuE;;;AA9B/D,CAAA,AAAA,sHAAAf,tHAASiH;;AAAT,CAAA,AAAA,iIAAA,jIAASA,4IA+FDjJ;;AA/FR,AAAA,gBAAA,ZA+FQA;AA/FR,AAgGI,AAAC2B;;AACD,sBAAA,fAAO3B;;;AAjGX,CAAA,AAAA,6GAAA,7GAASiJ,wHAOWjJ,MAAKN,IAAIC;;AAP7B,AAAA,gBAAA,ZAOoBK;AAPpB,AAOkC,OAACM,oDAASN,UAAKN,IAAIC;;;AAPrD,CAAA,AAAA,wGAAA,xGAASsJ,mHAQMjJ,MAAKC,IAAIlB;;AARxB,AAAA,gBAAA,ZAQeiB;AARf,AAQkC,OAACD,iDAAMC,UAAKC,IAAIlB;;;AARlD,CAAA,AAAA,2GAAA,3GAASkK,sHASSjJ,MAAKC;;AATvB,AAAA,gBAAA,ZASkBD;AATlB,AAUI,IAAMwJ,YAAU,AAACC,uBAAOhH;AAAxB,AACE,AAACrC,oDAASJ,UAAKC;;AACf,GAAM,sBAAA,pBAAK,GAAKuJ,mBACL,AAACC,uBAAOhH,qBACR,oBAAA,nBAAM6G;AAFjB,AAGE,OAAUtJ;;AAHZ;;;;AAZN,CAAA,AAAA,gGAAA,hGAASiJ,2GAoGEjJ;;AApGX,AAAA,gBAAA,ZAoGWA;AApGX,AAqGI,IAAAR,2BAAc+J;AAAd,AAAA,GAAA,CAAA/J,4BAAA;AAAA;AAAA,cAAAA,VAAYgM;AAAZ,AACE,MAAOA;;;AACT,IAAMK,qBAAa,yEAAA,xEAAM3N;AAAzB,AACE,GAAM2N;AAAN,AACE,AAAClK;;AADH;;AAEA,GAAI,EAAKkK,wBAAa,oBAAA,nBAAMvC;AAC1B,GAAMH;AAAN,AACE,IAAMvC,iBAAStE;AAAf,AACE,CAAMA,eAAM,CAACvD,yCAAAA,2CAAAA;;AACb,GAAU,EAAI,mBAAA,lBAAM0D,6BAAS,AAAC4C,6CAAEuB,eAAStE;AAAzC;AAAA,AACE,AAAChC,oDAASN,UAAK4G,eAAStE;;;AAJ9B;;AAKA,AACE,AAAChD,sEAAsBU;;AACvB,GAAMmJ;AAAN,AACE,eAAA,fAAOnJ;;AADT;;;AAENsC;;;AApHJ,CAAA,+DAAA,/DAAS2G;AAAT,AAAA,AAAA;;;AAAA,CAAA,qEAAA,rEAASA;;AAAT,CAAA,wEAAA,xEAASA;;AAAT,CAAA,6EAAA,WAAAhH,mBAAAC,qBAAAC,hIAAS8G;AAAT,AAAA,OAAA/H,iBAAAgB,qBAAA;;;AAAA;;;2DAAA,3DAASgH,8HAAUnK,EAAYuD,MAAyB6G,aAAgBC,eAC3CC,SAAmB5G,QAAkB6G,SACrCC;AAF7B,AAAA,YAAAN,oDAAmBlK,EAAYuD,MAAyB6G,aAAgBC,eAC3CC,SAAmB5G,QAAkB6G,SACrCC;;;AAFpBN,AAsJT,AAAA,2DAAA,mEAAA7F,9HAAMwB;AAAN,AAAA,IAAAiB,qBAAA;AAAA,AAAA,IAAArC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAqC,wBAAA,CAAA,UAAApC;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAqC,uBAAA,EAAA,CAAA,MAAA,AAAAD,4BAAA,AAAA,KAAAlC,qBAAA,AAAAkC,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAjB,8FAAA,CAAA,UAAA,MAAAkB;;;AAAA,AAAA,CAAA,gGAAA,aAAAsG,7GAAMxH,2GAAe7F;AAArB,AAAA,IAAAsN,aAAAD;IAAAC,iBAAA,AAAAvI,4BAAAuI;eAAA,AAAAtI,4CAAAsI,eAAA,tEAAiC/C;aAAjC,AAAAvF,4CAAAsI,eAAA,pEAA0CX;iBAA1C,AAAA3H,4CAAAsI,eAAA,xEAAiDV;AAAjD,AACE,IAAMxG,WAAS,2DAAA,KAAA,KAAA,MAAA,KAAA,KAAA,KAAA,1FAAC+D,yDAAWnK;AAA3B,AACE,mBAAA,2CAAA,sEAAA,gEAAA,pMAAYoG,2HAAoBmE,kEACFoC,wEACIC;;AAClCxG;;;AALJ,CAAA,mFAAA,nFAAMP;;AAAN;AAAA,CAAA,6EAAA,WAAA0H,xFAAM1H;AAAN,AAAA,IAAA2H,WAAA,AAAArI,gBAAAoI;IAAAA,eAAA,AAAAnI,eAAAmI;AAAA,AAAA,IAAAlI,qBAAA;AAAA,AAAA,OAAAA,wDAAAmI,SAAAD;;;AAAA,AASA,AAAeE,2DAAc,yDAAA,zDAAC5H;AAE9B,6DAAA,7DAAM6H,kIAAiB1N,EAAED,IAAImB,IAAIyM,IAAI1L;AAArC,AACE,IAAM7B,IAAEqN;IACFpN,MAAI,AAACF,yDAAcH,EAAEI;AAD3B,AAEE,GAAU,eAAA,dAAM,AAAYA;AAA5B;AAAA,AACE,CAAMqN,2DAAc,yDAAA,zDAAC5H;;AACrB,AAAYzF,YAAE6B;;AACd,CAAM,AAAK7B,MAAGJ;;AACd,cAAA,bAAM,AAAYI;AAAlB,AAAsB,QAACuN,oCAAAA,yCAAAA,PAAI5N,sBAAAA;;;AAC3B,CAAMA,IAAImB,OAAId;;;AAChBC;;AAEJ,0DAAA,1DAAMuN,4HAAc5N;AAApB,AACE,IAAM6N,MAAI;IACJxN,MAAI,AAACP,sDAAW+N,IAAI7N;AAD1B,AAAA,0FAEGK,IAAI,GAAA,iBAAA,hBAAO,AAAYwN;;AAK5B,AAAA;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,+FAAA,/FAASC,0GAME7M;;AANX,AAAA,gBAAA,ZAMWA;AANX,AAOI,AAAA,AACE,GAAM,EAAKgN,oBAAQ,GAAA,yEAAA,xEAAO9O;AAA1B,AACE,GAAA+O;AAAA,AAAA,AAAA,EAAAC,qDAAAC,yDAAAC,cAAA,CAAA,YAAA,wBACM,AAACxF,wGAAO5H;;AADd;;AADF;;;AAGFsC;;;AAXJ,CAAA,AAAA,qGAAA,rGAASuK,gHAcG7M,MAAK0J;;AAdjB,AAAA,gBAAA,ZAcY1J;AAdZ,AAeI,IAAM4J,SAAOtH;AAAb,AACE,kBAAA,jBAAM0K;;AACN,CAAM1K,eAAMoH;;AACZ,GAAM,GAAA,mBAAA,lBAAOjH;AAAb,AACE,AAACnC,oDAASN,UAAK4J,OAAOF;;AADxB;;AAEA,CAACqD,gDAAAA,wDAAAA,VAASrD,qCAAAA;;AACVA;;;AArBN,CAAA,AAAA,mGAAA,nGAASmD,8GAwBEtM,EAAExB;;AAxBb,AAAA,YAAA,RAwBWwB;AAxBX,AAwByB,OAASA,kDAAE,CAACxB,kCAAAA,gDAAAA,hBAAEuD,6BAAAA;;;AAxBvC,CAAA,AAAA,mGAAA,nGAASuK,8GAyBEtM,EAAExB,EAAET;;AAzBf,AAAA,YAAA,RAyBWiC;AAzBX,AAyByB,OAASA,kDAAE,CAACxB,kCAAAA,kDAAAA,lBAAEuD,+BAAAA,lBAAMhE,+BAAAA;;;AAzB7C,CAAA,AAAA,mGAAA,nGAASuO,8GA0BEtM,EAAExB,EAAET,EAAEE;;AA1BjB,AAAA,YAAA,RA0BW+B;AA1BX,AA0ByB,OAASA,kDAAE,CAACxB,kCAAAA,oDAAAA,pBAAEuD,iCAAAA,pBAAMhE,iCAAAA,/BAAEE,iCAAAA;;;AA1B/C,CAAA,AAAA,mGAAA,nGAASqO,8GA2BEtM,EAAExB,EAAET,EAAEE,EAAEuE;;AA3BnB,AAAA,YAAA,RA2BWxC;AA3BX,AA2ByB,OAASA,kDAAE,AAACyC,8CAAMjE,EAAEuD,aAAMhE,EAAEE,EAAEuE;;;AA3BvD,CAAA,AAAA,+FAAA,/FAAS8J,0GA8BE5J,EAAEN;;AA9Bb,AAAA,YAAA,RA8BWM;AA9BX,AA+BU,oFAAA,2BAAA,oCAAA,1IAAK,kBAAW4J,jBAAQlK,4EAGnB,GAAKqK,wBACL,AAACK,cAAI,AAAW1K,sBAChB,AAAC0C,6CAAE/C,aAAM,AAASK,kBAClB,AAAC0C,6CAAE0H,gBAAS,AAAYpK;;;AArCvC,CAAA,AAAA,4GAAA,5GAASkK,uHAwCW7M,MAAKN,IAAIC;;AAxC7B,AAAA,gBAAA,ZAwCoBK;AAxCpB,AAwCkC,OAACM,oDAASN,UAAKN,IAAIC;;;AAxCrD,CAAA,AAAA,uGAAA,vGAASkN,kHAyCM7M,MAAKC,IAAIlB;;AAzCxB,AAAA,gBAAA,ZAyCeiB;AAzCf,AAyCkC,OAACD,iDAAMC,UAAKC,IAAIlB;;;AAzClD,CAAA,AAAA,0GAAA,1GAAS8N,qHA0CS7M,MAAKC;;AA1CvB,AAAA,gBAAA,ZA0CkBD;AA1ClB,AA0CkC,OAACI,oDAASJ,UAAKC;;;AA1CjD,CAAA,AAAA,6GAAA,7GAAS4M,wHA6CMtM,EAAEL,EAAEc;;AA7CnB,AAAA,YAAA,RA6CeT;AA7Cf,AA6CyB,uEAAA,hEAACO,mDAAQP,MAAEL,EAAEc;;;AA7CtC,CAAA,8DAAA,9DAAS6L;AAAT,AAAA,AAAA;;;AAAA,CAAA,oEAAA,pEAASA;;AAAT,CAAA,uEAAA,vEAASA;;AAAT,CAAA,4EAAA,WAAA5K,mBAAAC,qBAAAC,/HAAS0K;AAAT,AAAA,OAAA3L,iBAAAgB,qBAAA;;;AAAA;;;0DAAA,1DAAS4K,4HAAmBxK,MAAMyK,SAA4BC,QAClCvK;AAD5B,AAAA,YAAAoK,mDAA4BvK,MAAMyK,SAA4BC,QAClCvK;;;AADnBoK,AA+CT,0DAAA,1DAAMS,4HAAcC,MAAMC,YAAYtI;AAAtC,AACE,sJAAA,MAAA,rJAAC4H,wDAAUS,MACA,AAACE,+DAAqBD,YAAYtI","names":["js/mranderson048","js/mranderson048.reagent","js/mranderson048.reagent.v0v8v0","js/mranderson048.reagent.v0v8v0.reagent","js/mranderson048.reagent.v0v8v0.reagent.ratom","js/mranderson048.reagent.v0v8v0.reagent.ratom.debug","mranderson048.reagent.v0v8v0.reagent.ratom/debug","js/mranderson048.reagent.v0v8v0.reagent.ratom.generation","mranderson048.reagent.v0v8v0.reagent.ratom/generation","js/mranderson048.reagent.v0v8v0.reagent.ratom.-running","mranderson048.reagent.v0v8v0.reagent.ratom/-running","cljs.core.atom","mranderson048.reagent.v0v8v0.reagent.ratom/reactive?","mranderson048.reagent.v0v8v0.reagent.ratom/*ratom-context*","mranderson048.reagent.v0v8v0.reagent.ratom/running","cljs.core/deref","mranderson048.reagent.v0v8v0.reagent.ratom/arr-len","x","mranderson048.reagent.v0v8v0.reagent.ratom/arr-eq","y","len","and__5000__auto__","i","or__5002__auto__","mranderson048.reagent.v0v8v0.reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__18034","*ratom-context*-temp-val__18035","mranderson048.reagent.v0v8v0.reagent.ratom/deref-capture","r","res","c","mranderson048.reagent.v0v8v0.reagent.ratom/notify-deref-watcher!","derefed","temp__5808__auto__","mranderson048.reagent.v0v8v0.reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","mranderson048.reagent.v0v8v0.reagent.ratom/add-w","this","key","w","cljs.core.assoc","mranderson048.reagent.v0v8v0.reagent.ratom/remove-w","cljs.core.dissoc","mranderson048.reagent.v0v8v0.reagent.ratom/notify-w","a","p1__18036#","p2__18037#","p3__18038#","cljs.core/reduce-kv","G__18039","k","mranderson048.reagent.v0v8v0.reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__18040","*ratom-context*-temp-val__18041","cljs.core/-deref","js/mranderson048.reagent.v0v8v0.reagent.ratom.rea-queue","mranderson048.reagent.v0v8v0.reagent.ratom/rea-queue","mranderson048.reagent.v0v8v0.reagent.ratom/rea-enqueue","mranderson048.reagent.v0v8v0.reagent.impl.batching/schedule","mranderson048.reagent.v0v8v0.reagent.ratom/flush!","q","n__5593__auto__","mranderson048.reagent.v0v8v0.reagent.impl.batching/ratom-flush","mranderson048.reagent.v0v8v0.reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__5287__auto__","writer__5288__auto__","opt__5289__auto__","mranderson048.reagent.v0v8v0.reagent.ratom/RAtom","mranderson048.reagent.v0v8v0.reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__18045","mranderson048.reagent.v0v8v0.reagent.ratom/atom","args-arr__5751__auto__","len__5726__auto__","i__5727__auto__","argseq__5752__auto__","cljs.core/IndexedSeq","p__18046","map__18047","cljs.core/--destructure-map","cljs.core.get","seq18043","G__18044","cljs.core/first","cljs.core/next","self__5711__auto__","mranderson048.reagent.v0v8v0.reagent.ratom/cache-key","mranderson048.reagent.v0v8v0.reagent.ratom/cached-reaction","destroy","m","G__18048","G__18049","G__18050","mranderson048.reagent.v0v8v0.reagent.ratom/make-reaction","cljs.core/dec","v","cljs.core/inc","mranderson048.reagent.v0v8v0.reagent.ratom/Track","mranderson048.reagent.v0v8v0.reagent.ratom/->Track","args","reaction","temp__5806__auto__","cljs.core._EQ_","cljs.core/hash","mranderson048.reagent.v0v8v0.reagent.ratom/make-track","mranderson048.reagent.v0v8v0.reagent.ratom/make-track!","t","G__18051","G__18052","G__18053","args__5732__auto__","argseq__5733__auto__","mranderson048.reagent.v0v8v0.reagent.ratom/track","seq18054","G__18055","cljs.core/ifn?","mranderson048.reagent.v0v8v0.reagent.ratom/track!","seq18056","G__18057","mranderson048.reagent.v0v8v0.reagent.ratom/RCursor","mranderson048.reagent.v0v8v0.reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__18058","*ratom-context*-temp-val__18059","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__18061","G__18062","G__18063","G__18064","G__18065","G__18066","mranderson048.reagent.v0v8v0.reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str","mranderson048.reagent.v0v8v0.reagent.ratom/with-let-destroy","mranderson048.reagent.v0v8v0.reagent.ratom/with-let-values","cljs.core/array","mranderson048$reagent$v0v8v0$reagent$ratom$IDisposable$dispose_BANG_$dyn","x__5350__auto__","m__5351__auto__","mranderson048.reagent.v0v8v0.reagent.ratom/dispose!","goog/typeOf","m__5349__auto__","cljs.core/missing-protocol","mranderson048$reagent$v0v8v0$reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","mranderson048.reagent.v0v8v0.reagent.ratom/add-on-dispose!","mranderson048.reagent.v0v8v0.reagent.ratom/IDisposable","mranderson048$reagent$v0v8v0$reagent$ratom$IRunnable$run$dyn","mranderson048.reagent.v0v8v0.reagent.ratom/run","mranderson048.reagent.v0v8v0.reagent.ratom/IRunnable","mranderson048.reagent.v0v8v0.reagent.ratom/handle-reaction-change","sender","p__18080","map__18081","mranderson048.reagent.v0v8v0.reagent.ratom/Reaction","mranderson048.reagent.v0v8v0.reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__18087","G__18088","G__18089","G__18090","G__18091","G__18092","*ratom-context*-orig-val__18069","*ratom-context*-temp-val__18070","cljs.core/set","seq__18071","cljs.core/seq","chunk__18072","count__18073","i__18074","temp__5804__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__18075","chunk__18076","count__18077","i__18078","cljs.core/-remove-watch","e18079","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__18082","chunk__18083","count__18084","i__18085","fexpr__18086","p__18095","map__18096","seq18093","G__18094","mranderson048.reagent.v0v8v0.reagent.ratom/temp-reaction","mranderson048.reagent.v0v8v0.reagent.ratom/run-in-reaction","run","mranderson048.reagent.v0v8v0.reagent.ratom/check-derefs","ctx","mranderson048.reagent.v0v8v0.reagent.ratom/Wrapper","mranderson048.reagent.v0v8v0.reagent.ratom/->Wrapper","callback","changed","mranderson048.reagent.v0v8v0.reagent.debug/has-console","mranderson048.reagent.v0v8v0.reagent.debug/tracking","mranderson048.reagent.v0v8v0.reagent.debug/track-console","js/console","cljs.core/not","mranderson048.reagent.v0v8v0.reagent.ratom/make-wrapper","value","callback-fn","mranderson048.reagent.v0v8v0.reagent.impl.util/make-partial-fn"],"sourcesContent":["(ns mranderson048.reagent.v0v8v0.reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [mranderson048.reagent.v0v8v0.reagent.ratom :refer [with-let]])\n  (:require [mranderson048.reagent.v0v8v0.reagent.impl.util :as util]\n            [mranderson048.reagent.v0v8v0.reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [mranderson048.reagent.v0v8v0.reagent.impl.batching :as batch]\n            [clojure.set :as s]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture [f r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher! [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(def ^{:private true :const true} cache-key \"reagReactionCache\")\n\n(defn- cached-reaction [f o k obj destroy]\n  (let [m (aget o cache-key)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (aget o cache-key) _\n                                       (dissoc _ k)\n                                       (aset o cache-key _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (aset o cache-key (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [this sender old new]\n  (._handle-change this sender old new))\n\n\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n(defn run-in-reaction [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (aset obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n"],"x_google_ignoreList":[0]}