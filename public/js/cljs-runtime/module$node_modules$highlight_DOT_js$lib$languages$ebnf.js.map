{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$ebnf.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACpHD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AAC5B,QAAIC,cAAcD,IAAKE,CAAAA,OAAL,CAAa,MAAb,EAAqB,MAArB,CAAlB;AA6BA,WAAO,CACHC,QAAS,IADN,EAEHC,SAAU,CACNH,WADM,EA7BQI,CAClBC,UAAW,WADOD,EAElBE,MAAO,qDAFWF,CA6BR,EAnBKG,CACfD,MAAO,GADQC,EACHC,IAAK,MADFD,EAEfJ,SAAU,CACNH,WADM,EAPYS,CACtBJ,UAAW,MADWI,EAEtBH,MAAO,QAFeG,CAOZ,EAGN,CAEEJ,UAAW,QAFb,EAGEK,SAAU,CACRX,IAAKY,CAAAA,gBADG,EAERZ,IAAKa,CAAAA,iBAFG,EAGR,CAACN,MAAO,GAAR,EAAaE,IAAK,GAAlB,CAHQ,CAHZ,CAHM,CAFKD,CAmBL,CAFP,CAAP;AA9B4B,GAAhC;AADoH,CAApH;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/ebnf.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ebnf\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n    var commentMode = hljs.COMMENT(/\\(\\*/, /\\*\\)/);\n\n    var nonTerminalMode = {\n        className: \"attribute\",\n        begin: /^[ ]*[a-zA-Z][a-zA-Z-_]*([\\s-_]+[a-zA-Z][a-zA-Z]*)*/\n    };\n\n    var specialSequenceMode = {\n        className: \"meta\",\n        begin: /\\?.*\\?/\n    };\n\n    var ruleBodyMode = {\n        begin: /=/, end: /[.;]/,\n        contains: [\n            commentMode,\n            specialSequenceMode,\n            {\n              // terminals\n              className: 'string',\n              variants: [\n                hljs.APOS_STRING_MODE,\n                hljs.QUOTE_STRING_MODE,\n                {begin: '`', end: '`'},\n              ]\n            },\n        ]\n    };\n\n    return {\n        illegal: /\\S/,\n        contains: [\n            commentMode,\n            nonTerminalMode,\n            ruleBodyMode\n        ]\n    };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","commentMode","COMMENT","illegal","contains","nonTerminalMode","className","begin","ruleBodyMode","end","specialSequenceMode","variants","APOS_STRING_MODE","QUOTE_STRING_MODE"]
}
