{"version":3,"sources":["day8/re_frame_10x/view/components.cljs"],"mappings":"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","names":["p__19852","map__19853","cljs.core/--destructure-map","cljs.core.get","day8.re-frame-10x.view.components/search-input","title","placeholder","on-save","on-change","on-stop","val","mranderson048.reagent.v0v8v0.reagent.core.atom","save","v","cljs.core/deref","clojure.string/trim","p1__19846#","p1__19847#","cljs.core/reset!","G__19917","day8.re-frame-10x.view.components/scroll!","el","start","end","time","goog.fx.dom/Scroll","cljs.core/clj->js","day8.re-frame-10x.view.components/scrolled-to-end?","tolerance","p__19977","map__19978","day8.re-frame-10x.view.components/autoscroll-list","class","scroll?","child","node","should-scroll","mranderson048.reagent.v0v8v0.reagent.core/create-class","_","and__5000__auto__","p__19979","map__19980","dom-node","day8.re-frame-10x.view.components/string->css","css-string","clojure.string.split","p1__19981#","cljs.core.map","cljs.core.reduce","p__19983","vec__19984","cljs.core.nth","acc","property","value","cljs.core.assoc","cljs.core.keyword","day8.re-frame-10x.view.components/default-cljs-devtools-prefs","devtools.prefs/default-config","day8.re-frame-10x.view.components/reset-wrapping","clojure.string/replace","day8.re-frame-10x.view.components/customized-cljs-devtools-prefs","day8.re-frame-10x.view.components/effective-cljs-devtools-prefs","cljs.core.merge","var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.view.components/make-devtools-api-call","seq19987","G__19988","cljs.core/first","cljs.core/next","self__5711__auto__","api-fn","args","previous-config__19828__auto__","devtools.prefs/get-prefs","prefs__19829__auto__","devtools.prefs/set-prefs!","cljs.core._EQ_","js/Error","cljs.core.apply","day8.re-frame-10x.view.components/cljs-devtools-header","seq19989","self__5712__auto__","cljs.core/seq","devtools.formatters.core/header-api-call","day8.re-frame-10x.view.components/cljs-devtools-body","seq19993","devtools.formatters.core/body-api-call","day8.re-frame-10x.view.components/cljs-devtools-has-body","seq19995","devtools.formatters.core/has-body-api-call","day8.re-frame-10x.view.components/get-object","jsonml","day8.re-frame-10x.view.components/get-config","day8.re-frame-10x.view.components/data-structure","path","expanded?","G__20005","mranderson048.re-frame.v0v10v2.re-frame.core/subscribe","G__20006","mranderson048.re-frame.v0v10v2.re-frame.core/dispatch","day8.re_frame_10x.view.components.cljs_devtools_has_body","G__20007","G__20008","day8.re-frame-10x.view.components/jsonml->hiccup","day8.re_frame_10x.view.components.cljs_devtools_body","cljs.core.conj","G__20009","G__20010","day8.re_frame_10x.view.components.cljs_devtools_header","vec__20012","seq__20013","first__20014","tag-name","attributes","children","tagnames","cljs.core/contains?","cljs.core.into","cljs.core.js__GT_clj","cljs.core.map_indexed","i","G__20015","G__20016","day8.re-frame-10x.view.components/subtree","data","G__20017","day8.re-frame-10x.utils.re-com/v-box","day8.re-frame-10x.utils.re-com/h-box","clojure.string.join","G__20018","or__5002__auto__","cljs.core/boolean?","cljs.core.prn_str","day8.re-frame-10x.view.components/subscription-render","day8.re-frame-10x.view.components/simple-render","p__20024","vec__20025","seq20021","G__20022","G__20023","js/RegExp","day8.re-frame-10x.view.components/tag","label","day8.re-frame-10x.utils.re-com/box","day8.re-frame-10x.view.components/highlight","mranderson048.reagent.v0v8v0.reagent.core/adapt-react-class","js/Highlight"],"sourcesContent":["(ns day8.re-frame-10x.view.components\n  (:require [clojure.string :as str]\n            [goog.fx.dom :as fx]\n            [mranderson048.re-frame.v0v10v2.re-frame.core :as rf]\n            [clojure.string :as str]\n            [day8.re-frame-10x.utils.re-com :as rc]\n            [mranderson048.reagent.v0v8v0.reagent.core :as r]\n            [devtools.prefs]\n            [devtools.formatters.core]\n            [cljsjs.react-highlight]\n            [cljsjs.highlight.langs.clojure])\n  (:require-macros [day8.re-frame-10x.utils.macros :refer [with-cljs-devtools-prefs]]))\n\n(defn search-input [{:keys [title placeholder on-save on-change on-stop]}]\n  (let [val  (r/atom title)\n        save #(let [v (-> @val str str/trim)]\n                (when (pos? (count v))\n                  (on-save v)))]\n    (fn []\n      [:input {:type        \"text\"\n               :value       @val\n               :auto-focus  true\n               :placeholder placeholder\n               :size        (if (> 20 (count (str @val)))\n                              25\n                              (count (str @val)))\n               :on-change   #(do (reset! val (-> % .-target .-value))\n                                 (on-change %))\n               :on-key-down #(case (.-which %)\n                               13 (do\n                                    (save)\n                                    (reset! val \"\"))\n                               nil)}])))\n\n(defn scroll! [el start end time]\n  (.play (fx/Scroll. el (clj->js start) (clj->js end) time)))\n\n(defn scrolled-to-end? [el tolerance]\n  ;; at-end?: element.scrollHeight - element.scrollTop === element.clientHeight\n  (> tolerance (- (.-scrollHeight el) (.-scrollTop el) (.-clientHeight el))))\n\n(defn autoscroll-list [{:keys [class scroll?]} child]\n  \"Reagent component that enables scrolling for the elements of its child dom-node.\n   Scrolling is only enabled if the list is scrolled to the end.\n   Scrolling can be set as option for debugging purposes.\n   Thanks to Martin Klepsch! Original code can be found here:\n       https://gist.github.com/martinklepsch/440e6fd96714fac8c66d892e0be2aaa0\"\n  (let [node          (r/atom nil)\n        should-scroll (r/atom true)]\n    (r/create-class\n      {:display-name \"autoscroll-list\"\n       :component-did-mount\n                     (fn [_]\n                       (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 0))\n       :component-will-update\n                     (fn [_]\n                       (reset! should-scroll (scrolled-to-end? @node 100)))\n       :component-did-update\n                     (fn [_]\n                       (when (and scroll? @should-scroll)\n                         (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 500)))\n       :reagent-render\n                     (fn [{:keys [class]} child]\n                       [:div {:class class :ref (fn [dom-node]\n                                                  (reset! node dom-node))}\n                        child])})))\n\n;; Data browser\n\n(defn string->css [css-string]\n  \"This function converts jsonml css-strings to valid css maps for hiccup.\n  Example: 'margin-left:0px;min-height:14px;' converts to\n           {:margin-left '0px', :min-height '14px'}\"\n\n  (->> (str/split css-string #\";\")\n       (map #(str/split % #\":\"))\n       (reduce (fn [acc [property value]]\n                 (assoc acc (keyword property) value)) {})))\n\n(declare jsonml->hiccup)\n\n(def default-cljs-devtools-prefs @devtools.prefs/default-config)\n\n(defn reset-wrapping [css-string]\n  (str/replace css-string #\"white-space:nowrap;\" \"\"))\n\n(def customized-cljs-devtools-prefs\n  {; Override some cljs-devtools default styles.\n\n   ; The goal here is to make default styles more flexible and wrap at the edge of our panel (we don't want horizontal\n   ; scrolling). Technically we want to remove all 'white-space:no-wrap'.\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/defaults.cljs\n   ;; Commented out as this causes some other issues too.\n   ;:header-style (reset-wrapping (:header-style default-cljs-devtools-prefs))\n   ;:expandable-style (reset-wrapping (:expandable-style default-cljs-devtools-prefs))\n   ;:item-style (reset-wrapping (:item-style default-cljs-devtools-prefs))\n\n   ; Hide the index spans on the left hand of collections. Shows how many elements in a collection.\n   :none-style                     \"display: none\"\n   :index-tag                      [:span :none-style]\n   :min-expandable-sequable-count-for-well-known-types\n   3\n\n   ; Our JSON renderer does not have hierarchy depth limit,\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/formatters/budgeting.cljs\n   :initial-hierarchy-depth-budget false})\n\n(def effective-cljs-devtools-prefs (merge default-cljs-devtools-prefs customized-cljs-devtools-prefs))\n\n(defn make-devtools-api-call [api-fn & args]\n  (with-cljs-devtools-prefs effective-cljs-devtools-prefs\n    (apply api-fn args)))\n\n(defn cljs-devtools-header [& args]\n  (apply make-devtools-api-call devtools.formatters.core/header-api-call args))\n\n(defn cljs-devtools-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/body-api-call args))\n\n(defn cljs-devtools-has-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/has-body-api-call args))\n\n(defn get-object [jsonml]\n  (.-object (get jsonml 1)))\n\n(defn get-config [jsonml]\n  (.-config (get jsonml 1)))\n\n(defn data-structure [jsonml path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [jsonml path]\n      [:span\n       {:class (str \"re-frame-10x--object\" (when @expanded? \" expanded\"))}\n       [:span {:class    \"toggle\"\n               :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n        [:button.expansion-button (if @expanded? \"\u25bc\" \"\u25b6\")]]\n       (if (and @expanded? (cljs-devtools-has-body (get-object jsonml) (get-config jsonml)))\n         (jsonml->hiccup\n           (cljs-devtools-body\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :body))\n         (jsonml->hiccup\n           (cljs-devtools-header\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :header)))])))\n\n(defn jsonml->hiccup\n  \"JSONML is the format used by Chrome's Custom Object Formatters.\n  The spec is at https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview.\n\n  JSONML is pretty much Hiccup over JSON. Chrome's implementation of this can\n  be found at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/object_ui/CustomPreviewComponent.js\n  \"\n  [jsonml path]\n  (if (number? jsonml)\n    jsonml\n    (let [[tag-name attributes & children] jsonml\n          tagnames #{\"div\" \"span\" \"ol\" \"li\" \"table\" \"tr\" \"td\"}]\n      (cond\n        (contains? tagnames tag-name) (into\n                                        [(keyword tag-name) {:style (-> (js->clj attributes)\n                                                                        (get \"style\")\n                                                                        (string->css))}]\n                                        (map-indexed (fn [i child] (jsonml->hiccup child (conj path i))))\n                                        children)\n\n        (= tag-name \"object\") [data-structure jsonml path]\n        :else jsonml))))\n\n(defn subtree [data title path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [rc/v-box\n       :children\n       [[rc/h-box\n         :align :center\n         :class (str/join \" \" [\"re-frame-10x--object\"\n                               (when @expanded? \"expanded\")])\n         :children\n         [[:span {:class    \"toggle\"\n                  :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n           [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n          (or title \"data\")]]\n        [rc/h-box\n         :children [[:div {:style {:margin-left 20}}\n                     (cond\n                       (and @expanded?\n                            (or (string? data)\n                                (number? data)\n                                (boolean? data)\n                                (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n                       @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]]]]])))\n\n(defn subscription-render [data title path]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       (or title \"data\")\n       [:div {:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn simple-render [data path & [class]]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")\n                              class])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       [:div #_{:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (instance? js/RegExp data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn tag [class label]\n  [rc/box\n   :class (str \"rft-tag noselect \" class)\n   :child [:span {:style {:margin \"auto\"}} label]])\n\n(def highlight (r/adapt-react-class js/Highlight))\n"],"x_google_ignoreList":[0]}