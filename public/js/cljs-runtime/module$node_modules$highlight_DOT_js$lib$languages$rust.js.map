{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$rust.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACpHD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AA2B9B,WAAO,CACLC,QAAS,CAAC,IAAD,CADJ,EAELC,SAAU,CACRC,QA3BFC,0RA0BU,EAGRC,QACE,6BAJM,EAKRC,SAzBFC,spBAoBU,CAFL;AAULC,YAASR,IAAKS,CAAAA,QAAdD,GAAyB,IAVpB,EAWLE,QAAS,OAXJ,EAYLC,SAAU,CACRX,IAAKY,CAAAA,mBADG,EAERZ,IAAKa,CAAAA,OAAL,CAAa,MAAb,EAAqB,MAArB,EAA6B,CAACF,SAAU,CAAC,MAAD,CAAX,CAA7B,CAFQ,EAGRX,IAAKc,CAAAA,OAAL,CAAad,IAAKe,CAAAA,iBAAlB,EAAqC,CAACC,MAAO,KAAR,EAAeN,QAAS,IAAxB,CAArC,CAHQ,EAIR,CACEO,UAAW,QADb,EAEEC,SAAU,CACP,CAAEF,MAAO,wBAAT,CADO,EAEP,CAAEA,MAAO,iCAAT,CAFO,CAFZ,CAJQ,EAWR,CACEC,UAAW,QADb,EAEED,MAAO,yBAFT,CAXQ,EAeR,CACEC,UAAW,QADb,EAEEC,SAAU,CACR,CAAEF,MAAO,oDAAT,CADQ,EAER,CAAEA,MAAO,qDAAT,CAFQ;AAGR,KAAEA,MAAO,2DAAT,CAHQ,EAIR,CAAEA,MAAO,sFAAT,CAJQ,CAFZ,EAUEG,UAAW,CAVb,CAfQ,EA2BR,CACEF,UAAW,UADb,EAEEG,cAAe,IAFjB,EAEuBC,IAAK,YAF5B,EAEuCC,WAAY,CAAA,CAFnD,EAGEX,SAAU,CAACX,IAAKuB,CAAAA,qBAAN,CAHZ,CA3BQ,EAgCR,CACEN,UAAW,MADb,EAEED,MAAO,UAFT,EAEqBK,IAAK,KAF1B,EAGEV,SAAU,CACR,CACEM,UAAW,aADb,EAEED,MAAO,GAFT,EAEcK,IAAK,GAFnB,CADQ,CAHZ,CAhCQ,EA0CR,CACEJ,UAAW,OADb,EAEEG,cAAe,MAFjB,EAEyBC,IAAK,GAF9B,EAGEV,SAAU,CACRX,IAAKc,CAAAA,OAAL,CAAad,IAAKuB,CAAAA,qBAAlB;AAAyC,KAACC,WAAY,CAAA,CAAb,CAAzC,CADQ,CAHZ,EAMEd,QAAS,KANX,CA1CQ,EAkDR,CACEO,UAAW,OADb,EAEEG,cAAe,yBAFjB,EAE4CC,IAAK,GAFjD,EAGEV,SAAU,CACRX,IAAKc,CAAAA,OAAL,CAAad,IAAKuB,CAAAA,qBAAlB,EAAyC,CAACC,WAAY,CAAA,CAAb,CAAzC,CADQ,CAHZ,EAMEd,QAAS,UANX,CAlDQ,EA0DR,CACEM,MAAOhB,IAAKS,CAAAA,QAAZO,GAAuB,IADzB,EAEEd,SAAU,CAACI,SA1FfC,spBA0Fc,CAFZ,CA1DQ;AA8DR,KACES,MAAO,OADT,CA9DQ,CAZL,CAAP;AA3B8B,GAAhC;AADoH,CAApH;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/rust.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$rust\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  var KEYWORDS =\n    'abstract as async await become box break const continue crate do dyn ' +\n    'else enum extern false final fn for if impl in let loop macro match mod ' +\n    'move mut override priv pub ref return self Self static struct super ' +\n    'trait true try type typeof unsafe unsized use virtual where while yield';\n  var BUILTINS =\n    // functions\n    'drop ' +\n    // types\n    'i8 i16 i32 i64 i128 isize ' +\n    'u8 u16 u32 u64 u128 usize ' +\n    'f32 f64 ' +\n    'str char bool ' +\n    'Box Option Result String Vec ' +\n    // traits\n    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\n    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\n    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\n    'SliceConcatExt ToString ' +\n    // macros\n    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n    'include_bin! include_str! line! local_data_key! module_path! ' +\n    'option_env! print! println! select! stringify! try! unimplemented! ' +\n    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n  return {\n    aliases: ['rs'],\n    keywords: {\n      keyword:\n        KEYWORDS,\n      literal:\n        'true false Some None Ok Err',\n      built_in:\n        BUILTINS\n    },\n    lexemes: hljs.IDENT_RE + '!?',\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {begin: /b?\"/, illegal: null}),\n      {\n        className: 'string',\n        variants: [\n           { begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n           { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n                   NUM_SUFFIX\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn', end: '(\\\\(|<)', excludeEnd: true,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        className: 'meta',\n        begin: '#\\\\!?\\\\[', end: '\\\\]',\n        contains: [\n          {\n            className: 'meta-string',\n            begin: /\"/, end: /\"/\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'type', end: ';',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n        ],\n        illegal: '\\\\S'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'trait enum struct union', end: '{',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n        ],\n        illegal: '[\\\\w\\\\d]'\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {built_in: BUILTINS}\n      },\n      {\n        begin: '->'\n      }\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","aliases","keywords","keyword","KEYWORDS","literal","built_in","BUILTINS","lexemes","IDENT_RE","illegal","contains","C_LINE_COMMENT_MODE","COMMENT","inherit","QUOTE_STRING_MODE","begin","className","variants","relevance","beginKeywords","end","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent"]
}
