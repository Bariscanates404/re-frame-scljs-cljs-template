{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$properties.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,GAAkF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAC1HD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AAU9B,QAAIC,kBAAkB,CAEdC,IANIC,0CAIU,EAGdC,UAAW,CAHG,EAIdC,OAAQ,CAENC,UAAW,QAFL,EAGNJ,IAAK,GAHC,EAINE,UAAW,CAJL,EAKNG,SAAU,CACR,CAAEC,MAAO,SAAT,CADQ,CALJ,CAJM,CAAtB;AAeA,WAAO,CACLC,iBAAkB,CAAA,CADb,EAELC,QAAS,IAFJ,EAGLH,SAAU,CACRP,IAAKW,CAAAA,OAAL,CAAa,WAAb,EAA0B,GAA1B,CADQ,EAIR,CACEH,MAAO,4EADT,EAEEI,YAAa,CAAA,CAFf,EAGEL,SAAU,CACR,CACED,UAAW,MADb,EAEEE,MA/BSK,oCA6BX,EAGEC,WAAY,CAAA,CAHd,EAIEV,UAAW,CAJb,CADQ,CAHZ,EAWEC,OAAQJ,eAXV,CAJQ,EAkBR,CACEO,MAAO,yEADT,EAEEI,YAAa,CAAA,CAFf,EAGER,UAAW,CAHb,EAIEG,SAAU,CACR,CACED,UAAW,MADb,EAEEE,MA7CMO,iCA2CR,EAGED,WAAY,CAAA,CAHd;AAIEV,cAAW,CAJb,CADQ,CAJZ,EAYEC,OAAQJ,eAZV,CAlBQ,EAiCR,CACEK,UAAW,MADb,EAEEF,UAAW,CAFb,EAGEI,MAAO,4CAHT,CAjCQ,CAHL,CAAP;AAzB8B,GAAhC;AAD0H,CAA1H;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/properties.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$properties\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n\n  // whitespaces: space, tab, formfeed\n  var WS0 = '[ \\\\t\\\\f]*';\n  var WS1 = '[ \\\\t\\\\f]+';\n  // delimiter\n  var DELIM = '(' + WS0+'[:=]'+WS0+ '|' + WS1 + ')';\n  var KEY_ALPHANUM = '([^\\\\\\\\\\\\W:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var KEY_OTHER = '([^\\\\\\\\:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n\n  var DELIM_AND_VALUE = {\n          // skip DELIM\n          end: DELIM,\n          relevance: 0,\n          starts: {\n            // value: everything until end of line (again, taking into account backslashes)\n            className: 'string',\n            end: /$/,\n            relevance: 0,\n            contains: [\n              { begin: '\\\\\\\\\\\\n' }\n            ]\n          }\n        };\n\n  return {\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      hljs.COMMENT('^\\\\s*[!#]', '$'),\n      // key: everything until whitespace or = or : (taking into account backslashes)\n      // case of a \"normal\" key\n      {\n        begin: KEY_ALPHANUM + DELIM,\n        returnBegin: true,\n        contains: [\n          {\n            className: 'attr',\n            begin: KEY_ALPHANUM,\n            endsParent: true,\n            relevance: 0\n          }\n        ],\n        starts: DELIM_AND_VALUE\n      },\n      // case of key containing non-alphanumeric chars => relevance = 0\n      {\n        begin: KEY_OTHER + DELIM,\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'meta',\n            begin: KEY_OTHER,\n            endsParent: true,\n            relevance: 0\n          }\n        ],\n        starts: DELIM_AND_VALUE\n      },\n      // case of an empty key\n      {\n        className: 'attr',\n        relevance: 0,\n        begin: KEY_OTHER + WS0 + '$'\n      }\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","DELIM_AND_VALUE","end","DELIM","relevance","starts","className","contains","begin","case_insensitive","illegal","COMMENT","returnBegin","KEY_ALPHANUM","endsParent","KEY_OTHER"]
}
