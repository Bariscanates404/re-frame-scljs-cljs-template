{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$nimrod.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,GAA8E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACtHD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AAC9B,WAAO,CACLC,QAAS,CAAC,KAAD,CADJ,EAELC,SAAU,CACRC,QACE,+WAFM,EAQRC,QACE,sDATM,EAURC,SACE,0TAXM,CAFL;AAmBLC,aAAU,CAAE,CACRC,UAAW,MADH,EAERC,MAAO,KAFC,EAGRC,IAAK,KAHG,EAIRC,UAAW,EAJH,CAAF,EAKL,CACDH,UAAW,QADV,EAEDC,MAAO,cAFN,EAGDC,IAAK,GAHJ,EAIDH,SAAU,CAAC,CAACE,MAAO,IAAR,CAAD,CAJT,CALK,EAUL,CACDD,UAAW,QADV,EAEDC,MAAO,mBAFN,EAGDC,IAAK,KAHJ,CAVK,EAeRT,IAAKW,CAAAA,iBAfG,EAgBR,CACEJ,UAAW,MADb,EAEEC,MAAO,cAFT,EAGEE,UAAW,CAHb,CAhBQ,EAoBL,CACDH,UAAW,QADV,EAEDG,UAAW,CAFV,EAGDE,SAAU,CACR,CAACJ,MAAO,0DAAR,CADQ,EAER,CAACA,MAAO,6CAAR,CAFQ,EAGR,CAACA,MAAO,+CAAR,CAHQ;AAIR,KAACA,MAAO,uCAAR,CAJQ,CAHT,CApBK,EA8BRR,IAAKa,CAAAA,iBA9BG,CAnBL,CAAP;AAD8B,GAAhC;AADsH,CAAtH;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/nimrod.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$nimrod\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword:\n        'addr and as asm bind block break case cast const continue converter ' +\n        'discard distinct div do elif else end enum except export finally ' +\n        'for from generic if import in include interface is isnot iterator ' +\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\n        'raise ref return shl shr static template try tuple type using var ' +\n        'when while with without xor yield',\n      literal:\n        'shared guarded stdin stdout stderr result true false',\n      built_in:\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\n        'auto any range array openarray varargs seq set clong culong cchar ' +\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\n        'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [ {\n        className: 'meta', // Actually pragma\n        begin: /{\\./,\n        end: /\\.}/,\n        relevance: 10\n      }, {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [{begin: /\"\"/}]\n      }, {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      }, {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\n        ]\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  }\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","aliases","keywords","keyword","literal","built_in","contains","className","begin","end","relevance","QUOTE_STRING_MODE","variants","HASH_COMMENT_MODE"]
}
