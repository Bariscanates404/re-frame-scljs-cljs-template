{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$abnf.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACpHD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AAoD5B,WAAO,CACLC,QAlDmBC,qBAiDd,EAELC,SAhCE,gFA8BG,EAGLC,SAAU,CARcC,CACtBC,UAAW,WADWD,EAEtBE,MAAO,uCAFeF,CAQd,EA9BML,IAAKQ,CAAAA,OAALC,CAAa,GAAbA,EAAkB,GAAlBA,CA8BN,EA5BaC,CACrBJ,UAAW,QADUI,EAErBH,MAAO,oCAFcG,CA4Bb,EAvBcC,CACtBL,UAAW,QADWK,EAEtBJ,MAAO,oCAFeI,CAuBd,EAlBkBC,CAC1BN,UAAW,QADeM,EAE1BL,MAAO,6CAFmBK,CAkBlB,EAbuBC,CAC/BP,UAAW,QADoBO,EAE/BN,MAAO,OAFwBM,CAavB,EAONb,IAAKc,CAAAA,iBAPC;AAQNd,QAAKe,CAAAA,WARC,CAHL,CAAP;AApD4B,GAAhC;AADoH,CAApH;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/abnf.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$abnf\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n    var regexes = {\n        ruleDeclaration: \"^[a-zA-Z][a-zA-Z0-9-]*\",\n        unexpectedChars: \"[!@#$^&',?+~`|:]\"\n    };\n\n    var keywords = [\n        \"ALPHA\",\n        \"BIT\",\n        \"CHAR\",\n        \"CR\",\n        \"CRLF\",\n        \"CTL\",\n        \"DIGIT\",\n        \"DQUOTE\",\n        \"HEXDIG\",\n        \"HTAB\",\n        \"LF\",\n        \"LWSP\",\n        \"OCTET\",\n        \"SP\",\n        \"VCHAR\",\n        \"WSP\"\n    ];\n\n    var commentMode = hljs.COMMENT(\";\", \"$\");\n\n    var terminalBinaryMode = {\n        className: \"symbol\",\n        begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\n    };\n\n    var terminalDecimalMode = {\n        className: \"symbol\",\n        begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\n    };\n\n    var terminalHexadecimalMode = {\n        className: \"symbol\",\n        begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/,\n    };\n\n    var caseSensitivityIndicatorMode = {\n        className: \"symbol\",\n        begin: /%[si]/\n    };\n\n    var ruleDeclarationMode = {\n        className: \"attribute\",\n        begin: regexes.ruleDeclaration + '(?=\\\\s*=)',\n    };\n\n    return {\n      illegal: regexes.unexpectedChars,\n      keywords: keywords.join(\" \"),\n      contains: [\n          ruleDeclarationMode,\n          commentMode,\n          terminalBinaryMode,\n          terminalDecimalMode,\n          terminalHexadecimalMode,\n          caseSensitivityIndicatorMode,\n          hljs.QUOTE_STRING_MODE,\n          hljs.NUMBER_MODE\n      ]\n    };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","illegal","unexpectedChars","keywords","contains","ruleDeclarationMode","className","begin","COMMENT","commentMode","terminalBinaryMode","terminalDecimalMode","terminalHexadecimalMode","caseSensitivityIndicatorMode","QUOTE_STRING_MODE","NUMBER_MODE"]
}
