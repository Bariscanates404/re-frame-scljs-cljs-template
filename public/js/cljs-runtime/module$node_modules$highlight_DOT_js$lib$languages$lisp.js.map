{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$lisp.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACpHD,QAAOC,CAAAA,OAAP,GAAiBC,QAAQ,CAACC,IAAD,CAAO;AAQ9B,QAAIC,UAAU,CACZC,UAAW,SADC,EAEZC,MAAO,kBAFK,CAAd,EAIIC,SAAS,CACXF,UAAW,QADA,EAEXG,SAAU,CACR,CAACF,MAZuBG,wEAYxB,EAA+BC,UAAW,CAA1C,CADQ,EAER,CAACJ,MAAO,wBAAR,CAFQ,EAGR,CAACA,MAAO,wBAAR,CAHQ,EAIR,CAACA,MAAO,oCAAR,CAJQ,EAKR,CAACA,MAAO,yJAAR,EAA4EK,IAAK,KAAjF,CALQ,CAFC,CAJb,EAcIC;AAAST,QAAKU,CAAAA,OAAL,CAAaV,IAAKW,CAAAA,iBAAlB,EAAqC,CAACC,QAAS,IAAV,CAArC,CAdb;AAeIC,QAAAA,GAAUb,IAAKa,CAAAA,OAAL,CACZ,GADY,EACP,GADO,EAEZ,CACEN,UAAW,CADb,CAFY,CAAVM;AAMJ,QAAIC,WAAW,CACbX,MAAO,KADM,EACCK,IAAK,KADN,CAAf,EAGIO,UAAU,CACZb,UAAW,QADC,EAEZC,MAAO,8GAFK,CAHd,EAOIa,QAAQ,CACVb,MApCkBc,uGAmCR,EAEVV,UAAW,CAFD,CAPZ,EAkBIW,SAAS,CACXC,SAAU,CAACf,MAAD,EAASK,MAAT,EAAiBK,QAAjB,EAA2BC,OAA3B,EALMK,CAChBjB,MAAO,KADSiB,EACFZ,IAAK,KADHY,EAEhBD,SAAU,CAAC,MAAD,EAASlB,OAAT,EAAkBQ,MAAlB,EAA0BL,MAA1B,EAAkCY,KAAlC,CAFMI,CAKN,EAAiDJ,KAAjD,CADC,EAEXX,SAAU,CACR,CACEF,MAAO,SADT,EACqBK,IAAK,KAD1B,CADQ;AAIR,KACEL,MAAO,WADT,EACsBK,IAAK,KAD3B,EAEEa,SAAU,CAACC,KAAM,OAAP,CAFZ,CAJQ,EAQR,CACEnB,MAAO,cADT,CARQ,CAFC,CAlBb,EAiCIoB,cAAc,CAChBlB,SAAU,CACR,CAACF,MAAO,wGAAR,CADQ,EAER,CAACA,MAAO,mNAAR,CAFQ,CADM,CAjClB,EAuCIqB,OAAO,CACTrB,MAAO,SADE,EACSK,IAAK,KADd,CAvCX,EA0CIiB,OAAO,CACTC,eAAgB,CAAA,CADP;AAETnB,cAAW,CAFF,CA1CX;AA8CAiB,QAAKL,CAAAA,QAAL,GAAgB,CACd,CACEjB,UAAW,MADb,EAEEG,SAAU,CACR,CAACF,MA9Eac,uGA8Ed,CADQ,EAER,CAACd,MA9EMwB,aA8EP,CAFQ,CAFZ,CADc,EAQdF,IARc,CAAhB;AAUAA,QAAKN,CAAAA,QAAL,GAAgB,CAACD,MAAD,EAASK,WAAT,EAAsBC,IAAtB,EAA4BvB,OAA5B,EAAqCG,MAArC,EAA6CK,MAA7C,EAAqDI,IAArD,EAA8DC,QAA9D,EAAwEC,OAAxE,EA7CNa,CACRzB,MAvCWwB,aAsCHC,CA6CM,EAAsFZ,KAAtF,CAAhB;AAEA,WAAO,CACLJ,QAAS,IADJ,EAELO,SAAU,CACRf,MADQ,EArFEyB,CACZ3B,UAAW,MADC2B,EAEZ1B,MAAO,KAFK0B,EAEErB,IAAK,GAFPqB,CAqFF,EAGR5B,OAHQ,EAIRQ,MAJQ,EAKRI,IALQ,EAMRK,MANQ,EAORK,WAPQ,EAQRC,IARQ,EASRR,KATQ,CAFL,CAAP;AAvF8B,GAAhC;AADoH,CAApH;;",
"sources":["node_modules/highlight_DOT_js/lib/languages/lisp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$lisp\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n    ]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';', '$',\n    {\n      relevance: 0\n    }\n  );\n  var VARIABLE = {\n    begin: '\\\\*', end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(', end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ', end: '\\\\)',\n        keywords: {name: 'quote'}\n      },\n      {\n        begin: '\\'' + MEC_RE\n      }\n    ]\n  };\n  var QUOTED_ATOM = {\n    variants: [\n      {begin: '\\'' + LISP_IDENT_RE},\n      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n    ]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {begin: LISP_IDENT_RE},\n        {begin: MEC_RE}\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\n  return {\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      SHEBANG,\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","LITERAL","className","begin","NUMBER","variants","LISP_SIMPLE_NUMBER_RE","relevance","end","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","VARIABLE","KEYWORD","IDENT","LISP_IDENT_RE","QUOTED","contains","QUOTED_LIST","keywords","name","QUOTED_ATOM","LIST","BODY","endsWithParent","MEC_RE","MEC","SHEBANG"]
}
